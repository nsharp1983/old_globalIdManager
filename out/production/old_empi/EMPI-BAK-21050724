CREATE INDEX ADMITE_IDX
ON PATIENT_VISIT
(ADMIT_DATE)
PCTFREE 10
INITRANS 2
MAXTRANS 255
TABLESPACE ATS_EMPI
STORAGE(INITIAL 64K NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
LOGGING
/
CREATE SEQUENCE ALLERGY_SEQ
INCREMENT BY 1
START WITH 481122
MAXVALUE 9223372036854775807
NOMINVALUE
NOCYCLE 
CACHE 20
NOORDER 
/
CREATE INDEX ALT_PESON_IDX
ON AUDIT_EVENT
(ALT_REF_PERSON_ID)
PCTFREE 10
INITRANS 2
MAXTRANS 255
TABLESPACE ATS_EMPI
STORAGE(INITIAL 64K NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
LOGGING
/
CREATE TABLE APP_USER
(
    ID                             NUMBER NOT NULL,
    USERNAME                       VARCHAR2(50) NOT NULL,
    EMAIL                          VARCHAR2(255) NOT NULL,
    PHONE_NUMBER                   VARCHAR2(255),
    PASSWORD_HINT                  VARCHAR2(255),
    FIRST_NAME                     VARCHAR2(50) NOT NULL,
    LAST_NAME                      VARCHAR2(50) NOT NULL,
    WEBSITE                        VARCHAR2(255),
    ACCOUNT_EXPIRED                NUMBER(1,0) NOT NULL,
    ACCOUNT_LOCKED                 NUMBER(1,0) NOT NULL,
    CREDENTIALS_EXPIRED            NUMBER(1,0) NOT NULL,
    CITY                           VARCHAR2(50) NOT NULL,
    PROVINCE                       VARCHAR2(100),
    POSTAL_CODE                    VARCHAR2(15) NOT NULL,
    ADDRESS                        VARCHAR2(150),
    COUNTRY                        VARCHAR2(100),
    ACCOUNT_ENABLED                NUMBER(1,0),
    VERSION                        NUMBER,
    PASSWORD                       VARCHAR2(255) NOT NULL,
    CUSTOM1                        VARCHAR2(255),
    CUSTOM2                        VARCHAR2(255),
    CUSTOM3                        VARCHAR2(255),
    CUSTOM4                        VARCHAR2(255),
    CUSTOM5                        VARCHAR2(255),
    CONSTRAINT APP_USER_PKEY PRIMARY KEY (ID) USING INDEX
        PCTFREE 10
        INITRANS 2
        MAXTRANS 255
        TABLESPACE ATS_EMPI
        STORAGE(INITIAL 64K NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
        LOGGING,
    CONSTRAINT APP_USER_EMAIL_KEY UNIQUE (EMAIL) USING INDEX
        PCTFREE 10
        INITRANS 2
        MAXTRANS 255
        TABLESPACE ATS_EMPI
        STORAGE(INITIAL 64K NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
        LOGGING,
    CONSTRAINT APP_USER_USERNAME_KEY UNIQUE (USERNAME) USING INDEX
        PCTFREE 10
        INITRANS 2
        MAXTRANS 255
        TABLESPACE ATS_EMPI
        STORAGE(INITIAL 64K NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
        LOGGING
)
PCTFREE 10
MAXTRANS 255
TABLESPACE ATS_EMPI
STORAGE(INITIAL 64K NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
NOCACHE
LOGGING
/
COMMENT ON TABLE APP_USER IS '用户信息'
/
CREATE INDEX AUD_IDX
ON AUDIT_EVENT
(PATIENT_ID)
PCTFREE 10
INITRANS 2
MAXTRANS 255
TABLESPACE ATS_EMPI
STORAGE(INITIAL 64K NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
LOGGING
/
CREATE INDEX AUD_PP_IDX
ON AUDIT_EVENT
(PATIENT_ID, PATIENT_DOMAIN)
PCTFREE 10
INITRANS 2
MAXTRANS 255
TABLESPACE ATS_EMPI
STORAGE(INITIAL 64K NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
LOGGING
/
CREATE TABLE AUDIT_EVENT
(
    AUDIT_EVENT_ID                 NUMBER NOT NULL,
    DATE_CREATED                   TIMESTAMP(6) NOT NULL,
    AUDIT_EVENT_TYPE_CD            NUMBER NOT NULL,
    AUDIT_EVENT_DESCRIPTION        VARCHAR2(255),
    REF_PERSON_ID                  NUMBER,
    ALT_REF_PERSON_ID              NUMBER,
    PATIENT_ID                     VARCHAR2(64),
    PATIENT_DOMAIN                 VARCHAR2(64),
    PERSON_ID                      VARCHAR2(64),
    VISIT_FLOW_ID                  VARCHAR2(64),
    VISIT_FLOW_DOMAIN              VARCHAR2(64),
    EMPI                           VARCHAR2(64),
    HOSPITAL_DOMAIN                VARCHAR2(64),
    BEFORE_THE_CHANGE_PERSON       VARCHAR2(4000),
    AFTER_THE_CHANGE_PERSON        VARCHAR2(4000),
    BEFORE_THE_CHANGE_VISIT        VARCHAR2(4000),
    AFTER_THE_CHANGE_VISIT         VARCHAR2(4000),
    BEFORE_THE_CHANGE_ORDER        VARCHAR2(4000),
    AFTER_THE_CHANGE_ORDER         VARCHAR2(4000),
    TEMP_THE_CHANGE                VARCHAR2(4000),
    CHANGE_DESCRIPTION             VARCHAR2(4000),
    CREATOR_ID                     NUMBER NOT NULL,
    CONSTRAINT AUDIT_EVENT_PK PRIMARY KEY (AUDIT_EVENT_ID) USING INDEX
        PCTFREE 10
        INITRANS 2
        MAXTRANS 255
        TABLESPACE ATS_EMPI
        STORAGE(INITIAL 696M NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
        LOGGING
)
PCTFREE 10
MAXTRANS 255
TABLESPACE ATS_EMPI
STORAGE(INITIAL 4096M NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
NOCACHE
LOGGING
/
COMMENT ON TABLE AUDIT_EVENT IS '事件记录'
/
COMMENT ON COLUMN AUDIT_EVENT.REF_PERSON_ID IS 'The field refers to a person record that is associated in some way with the audit event. For example in the case of a person record update audit event this field will refer to the person record that was updated.'
/
COMMENT ON COLUMN AUDIT_EVENT.ALT_REF_PERSON_ID IS 'The audit event may refer to a second person that is associated with the event in some way. For example a link audit event would refer to the second person record that was linked.'
/
CREATE SEQUENCE AUDIT_EVENT_SEQ
INCREMENT BY 1
START WITH 3907855922
MAXVALUE 9223372036854775807
NOMINVALUE
NOCYCLE 
CACHE 20
NOORDER 
/
CREATE SEQUENCE CONTACT_SEQ
INCREMENT BY 1
START WITH 1421275222
MAXVALUE 9223372036854775807
NOMINVALUE
NOCYCLE 
CACHE 20
NOORDER 
/
CREATE TABLE CONTACTPERSON
(
    CONTACT_ID                     NUMBER NOT NULL,
    PERSON_ID                      NUMBER NOT NULL,
    CONTACT_NAME                   VARCHAR2(64),
    CONTACT_TYPE                   VARCHAR2(64),
    CONTACT_ADDRESS                VARCHAR2(255),
    CONTACT_PHONE                  VARCHAR2(255),
    CONTACT_MOBILE                 VARCHAR2(255),
    CUSTOM1                        VARCHAR2(255),
    CUSTOM2                        VARCHAR2(255),
    CUSTOM3                        VARCHAR2(255),
    CUSTOM4                        VARCHAR2(255),
    CUSTOM5                        VARCHAR2(255),
    CONSTRAINT CONTACT_PK PRIMARY KEY (CONTACT_ID, PERSON_ID) USING INDEX
        PCTFREE 10
        INITRANS 2
        MAXTRANS 255
        TABLESPACE ATS_EMPI
        STORAGE(INITIAL 26M NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
        LOGGING
)
PCTFREE 10
MAXTRANS 255
TABLESPACE ATS_EMPI
STORAGE(INITIAL 40M NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
NOCACHE
LOGGING
/
COMMENT ON TABLE CONTACTPERSON IS '联系人表'
/
CREATE INDEX CUSTOM1_IDX
ON PATIENT_VISIT
(CUSTOM1)
PCTFREE 10
INITRANS 2
MAXTRANS 255
TABLESPACE ATS_EMPI
STORAGE(INITIAL 1223M NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
LOGGING
/
CREATE INDEX CUSTOM15_IDX
ON PERSON
(CUSTOM15)
PCTFREE 10
INITRANS 2
MAXTRANS 255
TABLESPACE ATS_EMPI
STORAGE(INITIAL 568M NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
LOGGING
/
CREATE INDEX CUSTOM19_IDX
ON PERSON
(CUSTOM19)
PCTFREE 10
INITRANS 2
MAXTRANS 255
TABLESPACE ATS_EMPI
STORAGE(INITIAL 1280M NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
LOGGING
/
CREATE INDEX CUSTOM4_IDX
ON PATIENT_VISIT
(CUSTOM4)
PCTFREE 10
INITRANS 2
MAXTRANS 255
TABLESPACE ATS_EMPI
STORAGE(INITIAL 1280M NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
LOGGING
/
CREATE INDEX CUSTOM5_IDX
ON PATIENT_VISIT
(CUSTOM5)
PCTFREE 10
INITRANS 2
MAXTRANS 255
TABLESPACE ATS_EMPI
STORAGE(INITIAL 1344M NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
LOGGING
/
CREATE INDEX CUSTOM6_IDX
ON PERSON
(CUSTOM6)
PCTFREE 10
INITRANS 2
MAXTRANS 255
TABLESPACE ATS_EMPI
STORAGE(INITIAL 400M NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
LOGGING
/
CREATE INDEX DATE_AD_DIS
ON PATIENT_VISIT
(DISCHARGE_DATE, ADMIT_DATE, CREATE_DATE)
PCTFREE 10
INITRANS 2
MAXTRANS 255
TABLESPACE ATS_EMPI
STORAGE(INITIAL 64K NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
LOGGING
/
CREATE TABLE EMPI
(
    EMPI                           VARCHAR2(64) NOT NULL,
    NAME                           VARCHAR2(64),
    NAME_CODE                      VARCHAR2(64),
    NAME_SPELL_CODE                VARCHAR2(64),
    NAME_WB_CODE                   VARCHAR2(64),
    DATE_OF_BIRTH                  DATE,
    BIRTH_PROVINCE                 VARCHAR2(128),
    BIRTH_CITY                     VARCHAR2(64),
    BIRTH_COUNTY                   VARCHAR2(64),
    BIRTH_ZIP                      VARCHAR2(32),
    BIRTH_PLACE                    VARCHAR2(255),
    MULTIPLE_BIRTH_IND             VARCHAR2(1),
    BIRTH_ORDER                    VARCHAR2(64),
    MOTHERS_MAIDEN_NAME            VARCHAR2(64),
    SSN                            VARCHAR2(64),
    IDENTITY_NO                    VARCHAR2(64),
    HEALTH_CARD                    VARCHAR2(64),
    CITIZEN_CARD                   VARCHAR2(64),
    MEDICAL_CERTIFICATE            VARCHAR2(64),
    MEICARE_PERSON                 VARCHAR2(64),
    ELDER_CERTIFICATE              VARCHAR2(64),
    OPCASENO                       VARCHAR2(64),
    INSURANCE_NO                   VARCHAR2(64),
    INSURANCE_TYPE                 VARCHAR2(64),
    INSURANCE_NAME                 VARCHAR2(64),
    GENDER_CD                      VARCHAR2(64),
    GENDER_NAME                    VARCHAR2(64),
    GENDER_DOMAIN                  VARCHAR2(64),
    ETHNIC_GROUP_CD                VARCHAR2(64),
    ETHNIC_NAME                    VARCHAR2(64),
    ETHNIC_DOMAIN                  VARCHAR2(64),
    RACE_CD                        VARCHAR2(64),
    RACE_NAME                      VARCHAR2(64),
    RACE_DOMAIN                    VARCHAR2(64),
    NATIONALITY_CD                 VARCHAR2(64),
    NATIONALITY_NAME               VARCHAR2(64),
    NATIONALITY_DOMAIN             VARCHAR2(64),
    LANGUAGE_CD                    VARCHAR2(64),
    RELIGION_CD                    VARCHAR2(64),
    MARITAL_STATUS_CD              VARCHAR2(64),
    MARITAL_STATUS_NAME            VARCHAR2(64),
    MARITAL_DOMAIN                 VARCHAR2(64),
    DEGREE                         VARCHAR2(64),
    DEGREE_NAME                    VARCHAR2(64),
    DEGREE_DOMAIN                  VARCHAR2(64),
    EMAIL                          VARCHAR2(255),
    HOME_PROVINCE                  VARCHAR2(64),
    HOME_CITY                      VARCHAR2(64),
    HOME_COUNTY                    VARCHAR2(64),
    HOME_ZIP                       VARCHAR2(64),
    HOME_ADDRESS                   VARCHAR2(512),
    REGISTERED_PROVINCE            VARCHAR2(64),
    REGISTERED_CITY                VARCHAR2(64),
    REGISTERED_COUNTY              VARCHAR2(64),
    REGISTERED_ZIP                 VARCHAR2(32),
    REGISTERED_ADDRESS             VARCHAR2(512),
    NATIVE_PROVINCE                VARCHAR2(64),
    NATIVE_CITY                    VARCHAR2(64),
    WORK_ZIP                       VARCHAR2(64),
    WORK_ADDRESS                   VARCHAR2(512),
    ADDRESS1                       VARCHAR2(64),
    POSTAL_CODE                    VARCHAR2(64),
    ADDRESS_TYPE_CD                VARCHAR2(64),
    ADDRESS2                       VARCHAR2(64),
    POSTAL_CODE1                   VARCHAR2(64),
    ADDRESS1_TYPE_CD               VARCHAR2(64),
    CITY                           VARCHAR2(64),
    STATE                          VARCHAR2(64),
    COUNTRY                        VARCHAR2(64),
    COUNTRY_CODE                   VARCHAR2(64),
    PHONE_COUNTRY_CODE             VARCHAR2(64),
    PHONE_AREA_CODE                VARCHAR2(64),
    PHONE_NUMBER                   VARCHAR2(64),
    PHONE_EXT                      VARCHAR2(64),
    PHONE_TYPE_CD                  VARCHAR2(64),
    PHONE_COUNTRY_CODE1            VARCHAR2(64),
    PHONE_AREA_CODE1               VARCHAR2(64),
    PHONE_NUMBER1                  VARCHAR2(64),
    PHONE_EXT1                     VARCHAR2(64),
    PHONE_TYPE_CD1                 VARCHAR2(64),
    COMPANY                        VARCHAR2(64),
    COMPANYCONTACTS                VARCHAR2(64),
    BIRTHPLACE_CD                  VARCHAR2(64),
    WORKSTATUS                     VARCHAR2(64),
    PROFESSION                     VARCHAR2(64),
    PROFESSION_NAME                VARCHAR2(64),
    PROFESSION_DOMAIN              VARCHAR2(64),
    PRIVATE_NUMBER                 VARCHAR2(64),
    HOME_NUMBER                    VARCHAR2(64),
    WORK_NUMBER                    VARCHAR2(64),
    GUARDIAN_PERSON                VARCHAR2(64),
    VIP                            VARCHAR2(64),
    ACCOUNT_IDENTIFIER_DOMAIN_ID   VARCHAR2(64),
    ACCOUNT                        VARCHAR2(255),
    DEATH_IND                      VARCHAR2(1),
    DEATH_TIME                     TIMESTAMP(6),
    DATE_CHANGED                   TIMESTAMP(6),
    CHANGED_BY_ID                  VARCHAR2(64),
    DATE_VOIDED                    TIMESTAMP(6),
    VOIDED_BY_ID                   VARCHAR2(64),
    BLOOD_TYPE_CD                  VARCHAR2(64),
    RH_TYPE                        VARCHAR2(64),
    HOSPITAL_CD                    VARCHAR2(64),
    CUSTOM1                        VARCHAR2(255),
    CUSTOM2                        VARCHAR2(255),
    CUSTOM3                        VARCHAR2(255),
    CUSTOM4                        VARCHAR2(255),
    CUSTOM5                        VARCHAR2(255),
    CUSTOM6                        VARCHAR2(255),
    CUSTOM7                        VARCHAR2(255),
    CUSTOM8                        VARCHAR2(255),
    CUSTOM9                        VARCHAR2(255),
    CUSTOM10                       VARCHAR2(255),
    CARD_TYPE                      VARCHAR2(16),
    ACCOUNT_LOCKED                 VARCHAR2(64),
    ACCOUNT_LOCKED_DATE            TIMESTAMP(6),
    BIRTH_TIME                     TIMESTAMP(6),
    CONSTRAINT EMPI_PK PRIMARY KEY (EMPI) USING INDEX
        PCTFREE 10
        INITRANS 2
        MAXTRANS 255
        TABLESPACE ATS_EMPI
        STORAGE(INITIAL 336M NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
        LOGGING
)
PCTFREE 10
MAXTRANS 255
TABLESPACE ATS_EMPI
STORAGE(INITIAL 1129M NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
NOCACHE
LOGGING
/
COMMENT ON TABLE EMPI IS '病人EMPI信息索引表'
/
CREATE OR REPLACE PROCEDURE          EMPI_TO_AXDS
IS
BEGIN
  INSERT INTO AXDS.PERSONIDENTIFIER@LINK_TO_RAC SELECT * FROM ATS_EMPI.PERSONIDENTIFIER A WHERE NOT EXISTS (SELECT PATIENTID FROM AXDS.PERSONIDENTIFIER@LINK_TO_RAC B WHERE A.PATIENTID = B.PATIENTID);
END;

 
/
CREATE TABLE EXTENDFORPERSON
(
    EXTEND_ID                      NUMBER NOT NULL,
    EXTENDFIELDNAME                VARCHAR2(64) NOT NULL,
    PID4_FIELDS                    NUMBER NOT NULL,
    CUSTOM1                        VARCHAR2(256),
    CUSTOM2                        VARCHAR2(256),
    CUSTOM3                        VARCHAR2(256),
    CONSTRAINT EXTENDFORPERSON_PK PRIMARY KEY (EXTEND_ID) USING INDEX
        PCTFREE 10
        INITRANS 2
        MAXTRANS 255
        TABLESPACE ATS_EMPI
        STORAGE(INITIAL 64K NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
        LOGGING
)
PCTFREE 10
MAXTRANS 255
TABLESPACE ATS_EMPI
STORAGE(INITIAL 64K NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
NOCACHE
LOGGING
/
COMMENT ON TABLE EXTENDFORPERSON IS '扩展字段关系对应表'
/
CREATE SEQUENCE HIBERNATE_SEQUENCE
INCREMENT BY 1
START WITH 222
MAXVALUE 9223372036854775807
NOMINVALUE
NOCYCLE 
CACHE 20
NOORDER 
/
CREATE SEQUENCE HISTORY_SEQ
INCREMENT BY 1
START WITH 617636862
MAXVALUE 9223372036854775807
NOMINVALUE
NOCYCLE 
CACHE 20
NOORDER 
/
CREATE SEQUENCE IDENTIFIER_ATTRIBUTE_SEQ
INCREMENT BY 1
START WITH 122
MAXVALUE 9223372036854775807
NOMINVALUE
NOCYCLE 
CACHE 20
NOORDER 
/
CREATE SEQUENCE IDENTIFIER_DOMAIN_SEQ
INCREMENT BY 1
START WITH 641122
MAXVALUE 9223372036854775807
NOMINVALUE
NOCYCLE 
CACHE 20
NOORDER 
/
CREATE SEQUENCE IDENTIFIER_SEQ
INCREMENT BY 1
START WITH 122
MAXVALUE 9223372036854775807
NOMINVALUE
NOCYCLE 
CACHE 20
NOORDER 
/
CREATE INDEX IN_PERSON_DOMAIN
ON PATIENT_VISIT_HISTORY
(PERSON_DOMAIN)
PCTFREE 10
INITRANS 2
MAXTRANS 255
TABLESPACE ATS_EMPI
STORAGE(INITIAL 64K NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
LOGGING
/
CREATE INDEX IN_PERSONID
ON PATIENT_VISIT_HISTORY
(PERSON_ID)
PCTFREE 10
INITRANS 2
MAXTRANS 255
TABLESPACE ATS_EMPI
STORAGE(INITIAL 64K NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
LOGGING
/
CREATE INDEX IND_DATEVOIDED
ON EMPI
(DATE_VOIDED)
PCTFREE 10
INITRANS 2
MAXTRANS 255
TABLESPACE ATS_EMPI
STORAGE(INITIAL 64K NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
LOGGING
/
CREATE INDEX IND_NAME
ON PERSON
(NAME)
PCTFREE 10
INITRANS 2
MAXTRANS 255
TABLESPACE ATS_EMPI
STORAGE(INITIAL 64K NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
LOGGING
/
CREATE INDEX IND_TYPE
ON PATIENT_VISIT
(PAT_CATEGORY, COURTESY_CODE)
PCTFREE 10
INITRANS 2
MAXTRANS 255
TABLESPACE ATS_EMPI
STORAGE(INITIAL 64K NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
LOGGING
/
CREATE INDEX IPSTNAME_IDX
ON PATIENT_VISIT
(IP_STATUS_NAME)
PCTFREE 10
INITRANS 2
MAXTRANS 255
TABLESPACE ATS_EMPI
STORAGE(INITIAL 64K NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
LOGGING
/
CREATE TABLE MERGE_EVENT
(
    MERGE_EVENT_ID                 NUMBER NOT NULL,
    EVENT_UUID                     VARCHAR2(64),
    OLD_PERSON_ID                  VARCHAR2(32),
    OLD_PATIENT_ID                 VARCHAR2(32),
    OLD_PATIENT_DOMAIN             VARCHAR2(32),
    OLD_NAME                       VARCHAR2(64),
    OLD_SEX                        VARCHAR2(8),
    OLD_IDENTITY_NO                VARCHAR2(32),
    OLD_BIRTHDAY                   TIMESTAMP(6),
    OLD_EMPI                       VARCHAR2(64),
    NEW_EMPI                       VARCHAR2(64),
    MERGE_TYPE                     VARCHAR2(32),
    MERGE_STATUS                   VARCHAR2(8),
    MERGE_DATE                     TIMESTAMP(6) NOT NULL,
    SEND_STATUS                    VARCHAR2(8),
    SEND_DATE                      TIMESTAMP(6),
    SEND_BACK_DATE                 TIMESTAMP(6),
    NOTIFY_STATUS                  VARCHAR2(8),
    NOTIFY_DATE                    TIMESTAMP(6),
    NOTIFY_BACK_DATE               TIMESTAMP(6),
    CONSTRAINT MERGE_EVENT_PK PRIMARY KEY (MERGE_EVENT_ID) USING INDEX
        PCTFREE 10
        INITRANS 2
        MAXTRANS 255
        TABLESPACE ATS_EMPI
        STORAGE(INITIAL 64K NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
        LOGGING
)
PCTFREE 10
MAXTRANS 255
TABLESPACE ATS_EMPI
STORAGE(INITIAL 64K NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
NOCACHE
LOGGING
/
COMMENT ON TABLE MERGE_EVENT IS '合并事件记录'
/
COMMENT ON COLUMN MERGE_EVENT.EVENT_UUID IS '一次合并记录的唯一事件UUID'
/
COMMENT ON COLUMN MERGE_EVENT.OLD_PERSON_ID IS '原病人记录PK'
/
COMMENT ON COLUMN MERGE_EVENT.OLD_PATIENT_ID IS '原病人ID'
/
COMMENT ON COLUMN MERGE_EVENT.OLD_PATIENT_DOMAIN IS '原病人ID域'
/
COMMENT ON COLUMN MERGE_EVENT.OLD_NAME IS '原病人姓名'
/
COMMENT ON COLUMN MERGE_EVENT.OLD_SEX IS '原病人性别'
/
COMMENT ON COLUMN MERGE_EVENT.OLD_IDENTITY_NO IS '原病人身份证号'
/
COMMENT ON COLUMN MERGE_EVENT.OLD_BIRTHDAY IS '原病人生辰'
/
COMMENT ON COLUMN MERGE_EVENT.OLD_EMPI IS '原病人EMPI号'
/
COMMENT ON COLUMN MERGE_EVENT.NEW_EMPI IS '新病人EMPI号'
/
COMMENT ON COLUMN MERGE_EVENT.MERGE_TYPE IS '合并类型: UPDATE AUTO_MERGE MERGE CANCEL_MERGE'
/
COMMENT ON COLUMN MERGE_EVENT.MERGE_STATUS IS '合并状态，0 成功 1 失败'
/
COMMENT ON COLUMN MERGE_EVENT.MERGE_DATE IS '合并记录插入日期'
/
COMMENT ON COLUMN MERGE_EVENT.SEND_STATUS IS '发送状态 0 成功 1失败'
/
COMMENT ON COLUMN MERGE_EVENT.SEND_DATE IS '同步发送时间'
/
COMMENT ON COLUMN MERGE_EVENT.SEND_BACK_DATE IS '同步发送返回时间'
/
COMMENT ON COLUMN MERGE_EVENT.NOTIFY_STATUS IS '通知状态 0 成功 1失败'
/
COMMENT ON COLUMN MERGE_EVENT.NOTIFY_DATE IS '推送时间'
/
COMMENT ON COLUMN MERGE_EVENT.NOTIFY_BACK_DATE IS '推送返回时间'
/
CREATE SEQUENCE MERGE_EVENT_SEQ
INCREMENT BY 1
START WITH 2713484122
MAXVALUE 9223372036854775807
NOMINVALUE
NOCYCLE 
CACHE 20
NOORDER 
/
CREATE OR REPLACE PROCEDURE          MERGE_TYPE_A(LEFT_EMPI IN VARCHAR2,RIGHT_EMPI IN VARCHAR2,OUT_V_MSG OUT VARCHAR2)
IS

GLOBAL_DOMAIN_CODE      VARCHAR2(64);
SQL_GUID                VARCHAR2(64);


BEGIN



  SELECT IDENTIFIER_DOMAIN_ID INTO GLOBAL_DOMAIN_CODE FROM ATS_DICT.IDENTIFIER_DOMAIN_DICT WHERE UNIVERSAL_IDENTIFIER ='2.16.840.1.113883.4.487.2' AND ROWNUM<2;

  SELECT DISTINCT CUSTOM28 INTO SQL_GUID FROM ATS_EMPI.PERSON WHERE EMPI = LEFT_EMPI;

  IF (SQL_GUID = NULL) THEN

  SELECT SYS_GUID() INTO SQL_GUID FROM DUAL;

  END IF;

--MERGE_EVENT--
  insert into ats_empi.merge_event select 
	 ats_empi.merge_event_seq.nextval,
	 sys_guid(),
         person_id,
         custom16,
         custom11,
         given_name,
         gender_cd,
         identity_no,
         date_of_birth,
         RIGHT_EMPI,
         LEFT_empi,
         'MERGE_A',
         '1',
         sysdate,
         '0',
         null,
         null,
         '0',
         null,
         null
    from ats_empi.person
    where EMPI = RIGHT_EMPI;

--PERSON--2013-11-29:PANMIN

  UPDATE ATS_EMPI.PERSON SET EMPI = LEFT_EMPI WHERE EMPI= RIGHT_EMPI AND DATE_VOIDED IS NULL;

--PERSON_IDENTIFIER--2013-11-29:PANMIN

  UPDATE ATS_EMPI.PERSON_IDENTIFIER SET DATE_VOIDED = SYSDATE WHERE CUSTOM1 = RIGHT_EMPI AND IDENTIFIER_DOMAIN_ID = GLOBAL_DOMAIN_CODE AND DATE_VOIDED IS NULL;

  UPDATE ATS_EMPI.PERSON_IDENTIFIER SET CUSTOM2 = NULL,CUSTOM1 = LEFT_EMPI WHERE CUSTOM1 = RIGHT_EMPI AND IDENTIFIER_DOMAIN_ID !=GLOBAL_DOMAIN_CODE;

 --PATIENT_VISIT--2013-11-29

   UPDATE ATS_EMPI.PATIENT_VISIT SET CUSTOM1=LEFT_EMPI WHERE CUSTOM1=RIGHT_EMPI;

 --PATIENT_VISIT_HISTORY-2013-11-29

   UPDATE ATS_EMPI.PATIENT_VISIT_HISTORY SET CUSTOM1=LEFT_EMPI,GLOBAL_ID = LEFT_EMPI WHERE GLOBAL_ID = RIGHT_EMPI;

--EMPI-2013-12-3

   UPDATE ATS_EMPI.EMPI SET DATE_VOIDED = SYSDATE WHERE EMPI = RIGHT_EMPI;

-- 更新所有强制合并ID的CUSTOM28为GUID

   UPDATE ATS_EMPI.PERSON SET CUSTOM28 = SQL_GUID WHERE EMPI = LEFT_EMPI;

   OUT_V_MSG:='1';

EXCEPTION
   
   WHEN OTHERS THEN

      ROLLBACK;

      OUT_V_MSG:='0';

      RAISE_APPLICATION_ERROR(-20010,'MERGE_TYPE_A: 脚本执行错误');

END;
/
CREATE OR REPLACE PROCEDURE          MERGE_TYPE_B(IN_EMPI IN VARCHAR2,IN_PERSONID IN VARCHAR2,IN_IDENTIFIER IN VARCHAR2,IN_DOMAIN IN VARCHAR2,IN_DOMAIN_NAME IN VARCHAR2,OUT_V_MSG OUT VARCHAR2)
IS

BEGIN


--PERSON--2013-11-29:PANMIN

    UPDATE ATS_EMPI.PERSON SET EMPI = IN_EMPI WHERE PERSON_ID = IN_PERSONID AND CUSTOM16 = IN_IDENTIFIER AND CUSTOM11 = IN_DOMAIN AND CUSTOM10 = IN_DOMAIN_NAME AND DATE_VOIDED IS NULL;

--PERSON_IDENTIFIER--2013-11-29:PANMIN

    UPDATE ATS_EMPI.PERSON_IDENTIFIER SET CUSTOM1 = IN_EMPI WHERE DATE_VOIDED IS NULL AND PERSON_ID = IN_PERSONID AND IDENTIFIER = IN_IDENTIFIER AND IDENTIFIER_DOMAIN_ID = (SELECT IDENTIFIER_DOMAIN_ID FROM ATS_DICT.IDENTIFIER_DOMAIN_DICT WHERE UNIVERSAL_IDENTIFIER = IN_DOMAIN AND NAMESPACE_IDENTIFIER = IN_DOMAIN_NAME);

--PATIENT_VISIT--20150723:PANMIN

    UPDATE ATS_EMPI.PATIENT_VISIT SET CUSTOM1 = IN_EMPI WHERE VOIDED_DATE IS NULL AND PATIENT_ID = IN_IDENTIFIER AND PERSON_DOMAIN = IN_DOMAIN;

--PATIENT_VISIT_HISTORY-20150723:PANMIN

    UPDATE ATS_EMPI.PATIENT_VISIT_HISTORY SET GLOBAL_ID = IN_EMPI WHERE VOIDED_DATE IS NULL AND PATIENT_ID = IN_IDENTIFIER AND PERSON_DOMAIN = IN_DOMAIN;

    OUT_V_MSG:='1';

EXCEPTION
   
   WHEN OTHERS THEN

      ROLLBACK;

      OUT_V_MSG:='0';

      RAISE_APPLICATION_ERROR(-20010,'MERGE_TYPE_B: 脚本执行错误');
END;
/
CREATE INDEX NAME_IND
ON EMPI
(NAME)
PCTFREE 10
INITRANS 2
MAXTRANS 255
TABLESPACE ATS_EMPI
STORAGE(INITIAL 64K NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
LOGGING
/
CREATE INDEX PAT_GLOBAL_IDX
ON PATIENT_VISIT_HISTORY
(GLOBAL_ID)
PCTFREE 10
INITRANS 2
MAXTRANS 255
TABLESPACE ATS_EMPI
STORAGE(INITIAL 64K NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
LOGGING
/
CREATE INDEX PAT_VIS_RELEVAN_IDX
ON PATIENT_VISIT
(RELEVANCE_ID, RELEVANCE_DOMAIN)
PCTFREE 10
INITRANS 2
MAXTRANS 255
TABLESPACE ATS_EMPI
STORAGE(INITIAL 64K NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
LOGGING
/
CREATE INDEX PAT_VIS_RELEVAN_NAME_IDX
ON PATIENT_VISIT
(RELEVANCE_NAME)
PCTFREE 10
INITRANS 2
MAXTRANS 255
TABLESPACE ATS_EMPI
STORAGE(INITIAL 64K NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
LOGGING
/
CREATE INDEX PATIENT_ID
ON PATIENT_VISIT_HISTORY
(PATIENT_ID)
PCTFREE 10
INITRANS 2
MAXTRANS 255
TABLESPACE ATS_EMPI
STORAGE(INITIAL 64K NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
LOGGING
/
CREATE INDEX PATIENT_ID_IDX
ON PATIENT_VISIT
(PATIENT_ID, PERSON_DOMAIN)
PCTFREE 10
INITRANS 2
MAXTRANS 255
TABLESPACE ATS_EMPI
STORAGE(INITIAL 1348M NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
LOGGING
/
CREATE TABLE PATIENT_VISIT
(
    VISIT_ID                       NUMBER NOT NULL,
    PERSON_ID                      NUMBER NOT NULL,
    PERSON_DOMAIN                  VARCHAR2(64) NOT NULL,
    VISIT_FLOW_ID                  VARCHAR2(64) NOT NULL,
    VISIT_FLOW_DOMAIN              VARCHAR2(64) NOT NULL,
    HOSPITAL_DOMAIN                VARCHAR2(64),
    PAT_CATEGORY                   VARCHAR2(16),
    PAT_CURRENT_POINT_OF_CARE      VARCHAR2(256),
    PAT_CURRENT_ROOM               VARCHAR2(256),
    PAT_CURRENT_BED                VARCHAR2(256),
    PAT_CUURENT_DEP                VARCHAR2(256),
    PAT_CURRENT_POSITION_STATUS    VARCHAR2(256),
    PAT_CURRENT_POSITION_TYPE      VARCHAR2(32),
    PAT_CURRENT_BUILDING           VARCHAR2(64),
    PAT_CURRENT_FLOOR              VARCHAR2(64),
    PAT_CUURENT_DESCRIPTION        VARCHAR2(256),
    PAT_ADMISSION_TYPE             VARCHAR2(16),
    PAT_ADMISSION_NUMBER           VARCHAR2(128),
    PAT_FORMER_POINT_OF_CARE       VARCHAR2(256),
    PAT_FORMER_ROOM                VARCHAR2(256),
    PAT_FORMER_BED                 VARCHAR2(256),
    PAT_FORMER_DEP                 VARCHAR2(256),
    PAT_FORMER_POSITION_STATUS     VARCHAR2(256),
    PAT_FORMER_POSITION_TYPE       VARCHAR2(32),
    PAT_FORMER_BUILDING            VARCHAR2(64),
    PAT_FORMER_FLOOR               VARCHAR2(64),
    PAT_FORMER_DESCRIPTION         VARCHAR2(256),
    ADMISSIONS_DOCTOR              VARCHAR2(256),
    ADMISSIONS_DOCTOR_ID           VARCHAR2(32),
    REFERRING_DOCTOR               VARCHAR2(256),
    REFERRING_DOCTOR_ID            VARCHAR2(32),
    CONSULTATION_DOCTOR            VARCHAR2(256),
    CONSULTATION_DOCTOR_ID         VARCHAR2(32),
    HOSPITAL_SERVICE               VARCHAR2(32),
    PAT_TEMP_POINT_OF_CARE         VARCHAR2(256),
    PAT_TEMP_ROOM                  VARCHAR2(256),
    PAT_TEMP_BED                   VARCHAR2(256),
    PAT_TEMP_DEP                   VARCHAR2(256),
    PAT_TEMP_POSITION_STATUS       VARCHAR2(256),
    PAT_TEMP_POSITION_TYPE         VARCHAR2(32),
    PAT_TEMP_BUILDING              VARCHAR2(64),
    PAT_TEMP_FLOOR                 VARCHAR2(64),
    PAT_TEMP_DESCRIPTION           VARCHAR2(256),
    PAT_ADMISSION_TEST             VARCHAR2(256),
    PAT_RE_ADMISSION               VARCHAR2(32),
    PAT_ADMISSION_SOURCE           VARCHAR2(256),
    PAT_AMBULATORY_STATUS          VARCHAR2(256),
    PAT_VIP                        VARCHAR2(32),
    PAT_ADMISSION_DOCTORS          VARCHAR2(256),
    PAT_ADMISSION_DOCTORS_ID       VARCHAR2(32),
    PATIENT_CLASS                  VARCHAR2(64),
    PATIENT_ID                     VARCHAR2(64),
    PAT_FINANCIAL_CLASS            VARCHAR2(32),
    ROOM_BED_COST_PRICE            VARCHAR2(64),
    COURTESY_CODE                  VARCHAR2(16),
    CREDIT_RATING                  VARCHAR2(32),
    CONTRACT_CODE                  VARCHAR2(32),
    CONTRACT_CREATE_DATE           VARCHAR2(32),
    CONTRACT_PRICE                 VARCHAR2(32),
    CONTRACT_TIME                  VARCHAR2(32),
    INTEREST_RATE_CODE             VARCHAR2(32),
    BAD_DEBTS                      VARCHAR2(32),
    BAD_DEBTS_CREATE_DATE          VARCHAR2(32),
    BAD_DEBTS_CODE                 VARCHAR2(32),
    BAD_DEBTS_PRICE                VARCHAR2(32),
    BAD_DEBTS__RESTORE_PRICE       VARCHAR2(32),
    PAT_ACCOUNT_VOIDED             VARCHAR2(32),
    PAT_ACCOUNT_VOIDED_DATE        VARCHAR2(32),
    PAT_DISCHARGE_DISPOSITION      VARCHAR2(32),
    PAT_DISCHARGE_LOCATION         VARCHAR2(256),
    PAT_DIET_TYPE                  VARCHAR2(64),
    PAT_SERVICE_AGENCIES           VARCHAR2(64),
    PAT_BED_STATUS                 VARCHAR2(32),
    PAT_ACCOUNT_STATUS             VARCHAR2(32),
    PAT_DETER_POINT_OF_CARE        VARCHAR2(256),
    PAT_DETER_ROOM                 VARCHAR2(256),
    PAT_DETER_BED                  VARCHAR2(256),
    PAT_DETER_DEP                  VARCHAR2(256),
    PAT_DETER_POSITION_STATUS      VARCHAR2(256),
    PAT_DETER_POSITION_TYPE        VARCHAR2(32),
    PAT_DETER_BUILDING             VARCHAR2(64),
    PAT_DETER_FLOOR                VARCHAR2(64),
    PAT_DETER_DESCRIPTION          VARCHAR2(256),
    PAT_FOR_TEMP_POINT_OF_CARE     VARCHAR2(256),
    PAT_FOR_TEMP_ROOM              VARCHAR2(256),
    PAT_FOR_TEMP_BED               VARCHAR2(256),
    PAT_FOR_TEMP_DEP               VARCHAR2(256),
    PAT_FOR_TEMP_POSITION_STATUS   VARCHAR2(256),
    PAT_FOR_TEMP_POSITION_TYPE     VARCHAR2(32),
    PAT_FOR_TEMP_BUILDING          VARCHAR2(64),
    PAT_FOR_TEMP_FLOOR             VARCHAR2(64),
    PAT_FOR_TEMP_DESCRIPTION       VARCHAR2(256),
    ADMIT_DATE                     TIMESTAMP(6),
    DISCHARGE_DATE                 TIMESTAMP(6),
    PAT_DIFFERENCE                 VARCHAR2(32),
    PAT_TOTAL_COST                 VARCHAR2(32),
    PAT_TOTAL_DISPATCH             VARCHAR2(32),
    PAT_TOTAL_AMOUNT_PAYABLE       VARCHAR2(32),
    PAT_SPARE_ID                   VARCHAR2(32),
    PAT_VISIT_LOGO                 VARCHAR2(32),
    OTHER_MEDICAL_INSTITUTIONS     VARCHAR2(256),
    CREATE_DATE                    TIMESTAMP(6),
    CREATE_ID                      NUMBER,
    VOIDED_DATE                    TIMESTAMP(6),
    VOIDED_ID                      NUMBER,
    MODIFY_DATE                    TIMESTAMP(6),
    MODIFY_ID                      NUMBER,
    CUSTOM1                        VARCHAR2(256),
    CUSTOM2                        VARCHAR2(256),
    CUSTOM3                        VARCHAR2(256),
    CUSTOM4                        VARCHAR2(256),
    CUSTOM5                        VARCHAR2(256),
    PAT_NURSE_CODE                 VARCHAR2(32),
    PAT_NURSE_NAME                 VARCHAR2(32),
    TEND                           VARCHAR2(32),
    BABY_FLAG                      VARCHAR2(255),
    ADMIT_WEIGHT                   VARCHAR2(255),
    BIRTH_WEIGHT                   VARCHAR2(255),
    OPER_CODE                      VARCHAR2(32),
    OPER_DATE                      TIMESTAMP(6),
    PREFIX                         VARCHAR2(64),
    INSURANCE_TYPE                 VARCHAR2(64),
    CONTACT_PERSON                 VARCHAR2(64),
    CONTACT_RELATIONS              VARCHAR2(64),
    CONTACT_ADDRESS                VARCHAR2(512),
    CONTACT_PHONE                  VARCHAR2(64),
    PAT_CATEGORY_NAME              VARCHAR2(64),
    GENDER_NAME                    VARCHAR2(64),
    PAY_RATE                       VARCHAR2(64),
    DISCHARGE_NAME                 VARCHAR2(64),
    INSURANCE_NAME                 VARCHAR2(64),
    ADMISSION_NAME                 VARCHAR2(64),
    IP_STATUS_NAME                 VARCHAR2(64),
    DIFICULTY_NAME                 VARCHAR2(64),
    ADMIT_WAY_NAME                 VARCHAR2(64),
    ADMIT_WEIGHT_UNIT              VARCHAR2(64),
    BABY_WEIGHT_UNIT               VARCHAR2(64),
    MEDICINELIMITAMOUNT            NUMBER,
    SICKBEDLIMITAMOUNT             NUMBER,
    EXAMINELIMITAMOUNT             NUMBER,
    CURELIMITAMOUNT                NUMBER,
    HIUP_STATUS                    VARCHAR2(16),
    HIUP_ERROR_INFO                VARCHAR2(4000),
    ADMISSION_DOMAIN               VARCHAR2(64),
    ADMISSION_SOURCE_DOMAIN        VARCHAR2(64),
    ADMISSION_SOURCE_NAME          VARCHAR2(64),
    PATIENT_CLASS_NAME             VARCHAR2(64),
    PATIENT_CLASS_DOMAIN           VARCHAR2(64),
    IP_STATUS_DOMAIN               VARCHAR2(64),
    DIFICULTY_DOMAIN               VARCHAR2(64),
    DISCHARGE_DOMAIN               VARCHAR2(64),
    ACCOUNT_STATUS_NAME            VARCHAR2(64),
    ACCOUNT_STATUS_DOMAIN          VARCHAR2(64),
    GENDER_DOMAIN                  VARCHAR2(64),
    PAT_CATEGORY_SYSTEM            VARCHAR2(64),
    MOTHERS_ID                     VARCHAR2(64),
    MOTHERS_DOMAIN                 VARCHAR2(64),
    MOTHERS_FLOW_ID                VARCHAR2(64),
    MOTHERS_FLOW_DOMAIN            VARCHAR2(64),
    MOTHERS_NAME                   VARCHAR2(64),
    NOON_CODE                      VARCHAR2(16),
    PAYKIND_CODE                   VARCHAR2(64),
    PAYKIND_NAME                   VARCHAR2(64),
    SCHEMA_NO                      VARCHAR2(64),
    ORDER_NO                       VARCHAR2(64),
    SEENO                          VARCHAR2(64),
    BEGIN_TIME                     TIMESTAMP(6),
    END_TIME                       TIMESTAMP(6),
    YNBOOK                         VARCHAR2(16),
    YNFR                           VARCHAR2(16),
    APPEND_FLAG                    VARCHAR2(16),
    YNSEE                          VARCHAR2(16),
    SEE_DATE                       TIMESTAMP(6),
    TRIAGE_FLAG                    VARCHAR2(16),
    TRIAGE_OPCD                    VARCHAR2(64),
    TRIAGE_DATE                    TIMESTAMP(6),
    SEE_DPCD                       VARCHAR2(64),
    SEE_DOCD                       VARCHAR2(64),
    OUT_PATIENT_STATUS_A           VARCHAR2(16),
    OUT_PATIENT_STATUS_B           VARCHAR2(16),
    OUT_PATIENT_STATUS_C           VARCHAR2(16),
    IN_PATIENT_STATUS_A            VARCHAR2(16),
    IN_PATIENT_STATUS_B            VARCHAR2(16),
    IN_PATIENT_STATUS_C            VARCHAR2(16),
    PATIENT_SOURCE_NAME            VARCHAR2(64),
    OLD_PATIENT_ID                 VARCHAR2(64),
    OLD_PATIENT_DOMAIN             VARCHAR2(64),
    OLD_VISIT_FLOW_ID              VARCHAR2(64),
    OLD_VISIT_FLOW_DOMAIN          VARCHAR2(64),
    OLD_VISIT_ID                   VARCHAR2(64),
    OLD_PERSON_ID                  VARCHAR2(64),
    OLD_STATUS                     VARCHAR2(64),
    OLD_INFO                       VARCHAR2(255),
    ISEMERGENCY                    VARCHAR2(64),
    PAT_IP_TIMES                   VARCHAR2(16),
    DIAGNOSE_ICD                   VARCHAR2(64),
    DIAGNOSE_NAME                  VARCHAR2(64),
    RELEVANCE_ID                   VARCHAR2(64),
    RELEVANCE_DOMAIN               VARCHAR2(64),
    RELEVANCE_NAME                 VARCHAR2(64),
    CONSTRAINT PATIENT_VISIT_PK PRIMARY KEY (VISIT_ID) USING INDEX
        PCTFREE 10
        INITRANS 2
        MAXTRANS 255
        TABLESPACE ATS_EMPI
        STORAGE(INITIAL 400M NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
        LOGGING
)
PCTFREE 10
MAXTRANS 255
TABLESPACE ATS_EMPI
STORAGE(INITIAL 4096M NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
NOCACHE
LOGGING
/
COMMENT ON TABLE PATIENT_VISIT IS '病人就诊信息'
/
COMMENT ON COLUMN PATIENT_VISIT.PERSON_ID IS '病人ID'
/
COMMENT ON COLUMN PATIENT_VISIT.PERSON_DOMAIN IS '病人域ID'
/
COMMENT ON COLUMN PATIENT_VISIT.VISIT_FLOW_ID IS '流水ID'
/
COMMENT ON COLUMN PATIENT_VISIT.VISIT_FLOW_DOMAIN IS '流水域ID'
/
COMMENT ON COLUMN PATIENT_VISIT.HOSPITAL_DOMAIN IS '医院域ID'
/
COMMENT ON COLUMN PATIENT_VISIT.PAT_CATEGORY IS '患者类别'
/
COMMENT ON COLUMN PATIENT_VISIT.PAT_CURRENT_ROOM IS '入院病区'
/
COMMENT ON COLUMN PATIENT_VISIT.PAT_CURRENT_BED IS '入院床位'
/
COMMENT ON COLUMN PATIENT_VISIT.PAT_CUURENT_DEP IS '入院科室'
/
COMMENT ON COLUMN PATIENT_VISIT.PAT_FORMER_ROOM IS '病人前病区'
/
COMMENT ON COLUMN PATIENT_VISIT.PAT_FORMER_BED IS '病人前床位'
/
COMMENT ON COLUMN PATIENT_VISIT.PAT_FORMER_DEP IS '病人前科室'
/
COMMENT ON COLUMN PATIENT_VISIT.ADMISSIONS_DOCTOR IS '住院医师'
/
COMMENT ON COLUMN PATIENT_VISIT.ADMISSIONS_DOCTOR_ID IS '住院医师ID'
/
COMMENT ON COLUMN PATIENT_VISIT.REFERRING_DOCTOR IS '主治医师'
/
COMMENT ON COLUMN PATIENT_VISIT.REFERRING_DOCTOR_ID IS '主治医师ID'
/
COMMENT ON COLUMN PATIENT_VISIT.CONSULTATION_DOCTOR IS '主任医师'
/
COMMENT ON COLUMN PATIENT_VISIT.CONSULTATION_DOCTOR_ID IS '主任医师ID'
/
COMMENT ON COLUMN PATIENT_VISIT.HOSPITAL_SERVICE IS '医院服务'
/
COMMENT ON COLUMN PATIENT_VISIT.PAT_TEMP_ROOM IS '临时病区'
/
COMMENT ON COLUMN PATIENT_VISIT.PAT_TEMP_BED IS '临时床位'
/
COMMENT ON COLUMN PATIENT_VISIT.PAT_TEMP_DEP IS '临时科室'
/
COMMENT ON COLUMN PATIENT_VISIT.PAT_RE_ADMISSION IS '住院次数'
/
COMMENT ON COLUMN PATIENT_VISIT.PAT_ADMISSION_SOURCE IS '入院来源编码'
/
COMMENT ON COLUMN PATIENT_VISIT.PAT_VIP IS 'VIP标志'
/
COMMENT ON COLUMN PATIENT_VISIT.PAT_ADMISSION_DOCTORS IS '门诊接诊医生'
/
COMMENT ON COLUMN PATIENT_VISIT.PAT_ADMISSION_DOCTORS_ID IS '门诊接诊医生ID'
/
COMMENT ON COLUMN PATIENT_VISIT.PATIENT_CLASS IS '患者类型'
/
COMMENT ON COLUMN PATIENT_VISIT.PATIENT_ID IS '病人ID'
/
COMMENT ON COLUMN PATIENT_VISIT.COURTESY_CODE IS '住院状态'
/
COMMENT ON COLUMN PATIENT_VISIT.CREDIT_RATING IS '病例分型'
/
COMMENT ON COLUMN PATIENT_VISIT.INTEREST_RATE_CODE IS '支付比例编码'
/
COMMENT ON COLUMN PATIENT_VISIT.PAT_DISCHARGE_DISPOSITION IS '出院处置编码'
/
COMMENT ON COLUMN PATIENT_VISIT.PAT_DIET_TYPE IS '饮食类型'
/
COMMENT ON COLUMN PATIENT_VISIT.PAT_BED_STATUS IS '床位标志'
/
COMMENT ON COLUMN PATIENT_VISIT.PAT_ACCOUNT_STATUS IS '支付方式编码'
/
COMMENT ON COLUMN PATIENT_VISIT.PAT_DETER_POINT_OF_CARE IS '药费、床位、检查、治疗限额'
/
COMMENT ON COLUMN PATIENT_VISIT.PAT_DETER_ROOM IS '前缀'
/
COMMENT ON COLUMN PATIENT_VISIT.PAT_DETER_BED IS '床位科室'
/
COMMENT ON COLUMN PATIENT_VISIT.PAT_DETER_DEP IS '责任科室'
/
COMMENT ON COLUMN PATIENT_VISIT.PAT_FOR_TEMP_ROOM IS '前临时病区'
/
COMMENT ON COLUMN PATIENT_VISIT.PAT_FOR_TEMP_BED IS '前临时床位'
/
COMMENT ON COLUMN PATIENT_VISIT.PAT_FOR_TEMP_DEP IS '前临时科室'
/
COMMENT ON COLUMN PATIENT_VISIT.ADMIT_DATE IS '入院日期'
/
COMMENT ON COLUMN PATIENT_VISIT.DISCHARGE_DATE IS '出院日期'
/
COMMENT ON COLUMN PATIENT_VISIT.PAT_NURSE_CODE IS '护士ID'
/
COMMENT ON COLUMN PATIENT_VISIT.PAT_NURSE_NAME IS '护士姓名'
/
COMMENT ON COLUMN PATIENT_VISIT.TEND IS '护理'
/
COMMENT ON COLUMN PATIENT_VISIT.BABY_FLAG IS '婴儿标志'
/
COMMENT ON COLUMN PATIENT_VISIT.ADMIT_WEIGHT IS '入院体重'
/
COMMENT ON COLUMN PATIENT_VISIT.BIRTH_WEIGHT IS '出生体重'
/
COMMENT ON COLUMN PATIENT_VISIT.OPER_CODE IS '入院登记操作员'
/
COMMENT ON COLUMN PATIENT_VISIT.OPER_DATE IS '操作日期'
/
COMMENT ON COLUMN PATIENT_VISIT.PREFIX IS '前缀'
/
COMMENT ON COLUMN PATIENT_VISIT.PAT_CATEGORY_NAME IS '患者类型名称'
/
COMMENT ON COLUMN PATIENT_VISIT.DISCHARGE_NAME IS '离院处置名称'
/
COMMENT ON COLUMN PATIENT_VISIT.ADMISSION_NAME IS '入院时情况名称'
/
COMMENT ON COLUMN PATIENT_VISIT.IP_STATUS_NAME IS '病人住院状态名称'
/
COMMENT ON COLUMN PATIENT_VISIT.DIFICULTY_NAME IS '病例分型名称'
/
COMMENT ON COLUMN PATIENT_VISIT.ADMIT_WEIGHT_UNIT IS '入院体重单位'
/
COMMENT ON COLUMN PATIENT_VISIT.BABY_WEIGHT_UNIT IS '出院体重单位'
/
COMMENT ON COLUMN PATIENT_VISIT.MEDICINELIMITAMOUNT IS '药费限额'
/
COMMENT ON COLUMN PATIENT_VISIT.SICKBEDLIMITAMOUNT IS '床位限额'
/
COMMENT ON COLUMN PATIENT_VISIT.EXAMINELIMITAMOUNT IS '检查限额'
/
COMMENT ON COLUMN PATIENT_VISIT.CURELIMITAMOUNT IS '治疗限额'
/
COMMENT ON COLUMN PATIENT_VISIT.ADMISSION_DOMAIN IS '入院时情况编码系统'
/
COMMENT ON COLUMN PATIENT_VISIT.ADMISSION_SOURCE_DOMAIN IS '入院途径编码系统'
/
COMMENT ON COLUMN PATIENT_VISIT.ADMISSION_SOURCE_NAME IS '入院途径名称'
/
COMMENT ON COLUMN PATIENT_VISIT.IP_STATUS_DOMAIN IS '病人住院状态编码系统'
/
COMMENT ON COLUMN PATIENT_VISIT.DIFICULTY_DOMAIN IS '病例分型编码系统'
/
COMMENT ON COLUMN PATIENT_VISIT.DISCHARGE_DOMAIN IS '离院处置编码系统'
/
COMMENT ON COLUMN PATIENT_VISIT.ACCOUNT_STATUS_NAME IS '支付方式名称'
/
COMMENT ON COLUMN PATIENT_VISIT.ACCOUNT_STATUS_DOMAIN IS '支付方式编码系统'
/
COMMENT ON COLUMN PATIENT_VISIT.PAT_CATEGORY_SYSTEM IS '患者类别编码系统'
/
CREATE INDEX PATIENT_VISIT_DEPI_COMBINE
ON PATIENT_VISIT
(CREATE_DATE, PERSON_DOMAIN, PAT_CUURENT_DEP)
PCTFREE 10
INITRANS 2
MAXTRANS 255
TABLESPACE ATS_EMPI
STORAGE(INITIAL 64K NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
LOGGING
/
CREATE TABLE PATIENT_VISIT_HISTORY
(
    HISTORY_ID                     NUMBER NOT NULL,
    GLOBAL_ID                      VARCHAR2(256) NOT NULL,
    VISIT_ID                       NUMBER NOT NULL,
    PERSON_ID                      NUMBER NOT NULL,
    PERSON_DOMAIN                  VARCHAR2(64) NOT NULL,
    VISIT_FLOW_ID                  VARCHAR2(64) NOT NULL,
    VISIT_FLOW_DOMAIN              VARCHAR2(64) NOT NULL,
    HOSPITAL_DOMAIN                VARCHAR2(64),
    PAT_CATEGORY                   VARCHAR2(16),
    PAT_CURRENT_POINT_OF_CARE      VARCHAR2(256),
    PAT_CURRENT_ROOM               VARCHAR2(256),
    PAT_CURRENT_BED                VARCHAR2(256),
    PAT_CUURENT_DEP                VARCHAR2(256),
    PAT_CURRENT_POSITION_STATUS    VARCHAR2(256),
    PAT_CURRENT_POSITION_TYPE      VARCHAR2(32),
    PAT_CURRENT_BUILDING           VARCHAR2(64),
    PAT_CURRENT_FLOOR              VARCHAR2(64),
    PAT_CUURENT_DESCRIPTION        VARCHAR2(256),
    PAT_ADMISSION_TYPE             VARCHAR2(16),
    PAT_ADMISSION_NUMBER           VARCHAR2(128),
    PAT_FORMER_POINT_OF_CARE       VARCHAR2(256),
    PAT_FORMER_ROOM                VARCHAR2(256),
    PAT_FORMER_BED                 VARCHAR2(256),
    PAT_FORMER_DEP                 VARCHAR2(256),
    PAT_FORMER_POSITION_STATUS     VARCHAR2(256),
    PAT_FORMER_POSITION_TYPE       VARCHAR2(32),
    PAT_FORMER_BUILDING            VARCHAR2(64),
    PAT_FORMER_FLOOR               VARCHAR2(64),
    PAT_FORMER_DESCRIPTION         VARCHAR2(256),
    ADMISSIONS_DOCTOR              VARCHAR2(256),
    ADMISSIONS_DOCTOR_ID           VARCHAR2(32),
    REFERRING_DOCTOR               VARCHAR2(256),
    REFERRING_DOCTOR_ID            VARCHAR2(32),
    CONSULTATION_DOCTOR            VARCHAR2(256),
    CONSULTATION_DOCTOR_ID         VARCHAR2(32),
    HOSPITAL_SERVICE               VARCHAR2(32),
    PAT_TEMP_POINT_OF_CARE         VARCHAR2(256),
    PAT_TEMP_ROOM                  VARCHAR2(256),
    PAT_TEMP_BED                   VARCHAR2(256),
    PAT_TEMP_DEP                   VARCHAR2(256),
    PAT_TEMP_POSITION_STATUS       VARCHAR2(256),
    PAT_TEMP_POSITION_TYPE         VARCHAR2(32),
    PAT_TEMP_BUILDING              VARCHAR2(64),
    PAT_TEMP_FLOOR                 VARCHAR2(64),
    PAT_TEMP_DESCRIPTION           VARCHAR2(256),
    PAT_ADMISSION_TEST             VARCHAR2(256),
    PAT_RE_ADMISSION               VARCHAR2(32),
    PAT_ADMISSION_SOURCE           VARCHAR2(256),
    PAT_AMBULATORY_STATUS          VARCHAR2(256),
    PAT_VIP                        VARCHAR2(32),
    PAT_ADMISSION_DOCTORS          VARCHAR2(256),
    PAT_ADMISSION_DOCTORS_ID       VARCHAR2(32),
    PATIENT_CLASS                  VARCHAR2(64),
    PATIENT_ID                     VARCHAR2(64),
    PAT_FINANCIAL_CLASS            VARCHAR2(32),
    ROOM_BED_COST_PRICE            VARCHAR2(64),
    COURTESY_CODE                  VARCHAR2(16),
    CREDIT_RATING                  VARCHAR2(32),
    CONTRACT_CODE                  VARCHAR2(32),
    CONTRACT_CREATE_DATE           VARCHAR2(32),
    CONTRACT_PRICE                 VARCHAR2(32),
    CONTRACT_TIME                  VARCHAR2(32),
    INTEREST_RATE_CODE             VARCHAR2(32),
    BAD_DEBTS                      VARCHAR2(32),
    BAD_DEBTS_CREATE_DATE          VARCHAR2(32),
    BAD_DEBTS_CODE                 VARCHAR2(32),
    BAD_DEBTS_PRICE                VARCHAR2(32),
    BAD_DEBTS__RESTORE_PRICE       VARCHAR2(32),
    PAT_ACCOUNT_VOIDED             VARCHAR2(32),
    PAT_ACCOUNT_VOIDED_DATE        VARCHAR2(32),
    PAT_DISCHARGE_DISPOSITION      VARCHAR2(32),
    PAT_DISCHARGE_LOCATION         VARCHAR2(256),
    PAT_DIET_TYPE                  VARCHAR2(64),
    PAT_SERVICE_AGENCIES           VARCHAR2(64),
    PAT_BED_STATUS                 VARCHAR2(32),
    PAT_ACCOUNT_STATUS             VARCHAR2(32),
    PAT_DETER_POINT_OF_CARE        VARCHAR2(256),
    PAT_DETER_ROOM                 VARCHAR2(256),
    PAT_DETER_BED                  VARCHAR2(256),
    PAT_DETER_DEP                  VARCHAR2(256),
    PAT_DETER_POSITION_STATUS      VARCHAR2(256),
    PAT_DETER_POSITION_TYPE        VARCHAR2(32),
    PAT_DETER_BUILDING             VARCHAR2(64),
    PAT_DETER_FLOOR                VARCHAR2(64),
    PAT_DETER_DESCRIPTION          VARCHAR2(256),
    PAT_FOR_TEMP_POINT_OF_CARE     VARCHAR2(256),
    PAT_FOR_TEMP_ROOM              VARCHAR2(256),
    PAT_FOR_TEMP_BED               VARCHAR2(256),
    PAT_FOR_TEMP_DEP               VARCHAR2(256),
    PAT_FOR_TEMP_POSITION_STATUS   VARCHAR2(256),
    PAT_FOR_TEMP_POSITION_TYPE     VARCHAR2(32),
    PAT_FOR_TEMP_BUILDING          VARCHAR2(64),
    PAT_FOR_TEMP_FLOOR             VARCHAR2(64),
    PAT_FOR_TEMP_DESCRIPTION       VARCHAR2(256),
    ADMIT_DATE                     TIMESTAMP(6),
    DISCHARGE_DATE                 TIMESTAMP(6),
    PAT_DIFFERENCE                 VARCHAR2(32),
    PAT_TOTAL_COST                 VARCHAR2(32),
    PAT_TOTAL_DISPATCH             VARCHAR2(32),
    PAT_TOTAL_AMOUNT_PAYABLE       VARCHAR2(32),
    PAT_SPARE_ID                   VARCHAR2(32),
    PAT_VISIT_LOGO                 VARCHAR2(32),
    OTHER_MEDICAL_INSTITUTIONS     VARCHAR2(256),
    CREATE_DATE                    TIMESTAMP(6),
    CREATE_ID                      VARCHAR2(256),
    VOIDED_DATE                    TIMESTAMP(6),
    VOIDED_ID                      VARCHAR2(256),
    MODIFY_DATE                    TIMESTAMP(6),
    MODIFY_ID                      VARCHAR2(256),
    CUSTOM1                        VARCHAR2(256),
    CUSTOM2                        VARCHAR2(256),
    CUSTOM3                        VARCHAR2(256),
    CUSTOM4                        VARCHAR2(256),
    CUSTOM5                        VARCHAR2(256),
    PAT_NURSE_CODE                 VARCHAR2(32),
    PAT_NURSE_NAME                 VARCHAR2(32),
    TEND                           VARCHAR2(32),
    BABY_FLAG                      VARCHAR2(255),
    ADMIT_WEIGHT                   VARCHAR2(255),
    BIRTH_WEIGHT                   VARCHAR2(255),
    OPER_CODE                      VARCHAR2(32),
    OPER_DATE                      TIMESTAMP(6),
    PREFIX                         VARCHAR2(64),
    INSURANCE_TYPE                 VARCHAR2(64),
    CONTACT_PERSON                 VARCHAR2(64),
    CONTACT_RELATIONS              VARCHAR2(64),
    CONTACT_ADDRESS                VARCHAR2(512),
    CONTACT_PHONE                  VARCHAR2(64),
    PAT_CATEGORY_NAME              VARCHAR2(64),
    GENDER_NAME                    VARCHAR2(64),
    PAY_RATE                       VARCHAR2(64),
    DISCHARGE_NAME                 VARCHAR2(64),
    INSURANCE_NAME                 VARCHAR2(64),
    ADMISSION_NAME                 VARCHAR2(64),
    IP_STATUS_NAME                 VARCHAR2(64),
    DIFICULTY_NAME                 VARCHAR2(64),
    ADMIT_WAY_NAME                 VARCHAR2(64),
    ADMIT_WEIGHT_UNIT              VARCHAR2(64),
    BABY_WEIGHT_UNIT               VARCHAR2(64),
    MEDICINELIMITAMOUNT            NUMBER,
    SICKBEDLIMITAMOUNT             NUMBER,
    EXAMINELIMITAMOUNT             NUMBER,
    CURELIMITAMOUNT                NUMBER,
    HIUP_STATUS                    VARCHAR2(16),
    HIUP_ERROR_INFO                VARCHAR2(4000),
    ADMISSION_DOMAIN               VARCHAR2(64),
    ADMISSION_SOURCE_DOMAIN        VARCHAR2(64),
    ADMISSION_SOURCE_NAME          VARCHAR2(64),
    PATIENT_CLASS_NAME             VARCHAR2(64),
    PATIENT_CLASS_DOMAIN           VARCHAR2(64),
    IP_STATUS_DOMAIN               VARCHAR2(64),
    DIFICULTY_DOMAIN               VARCHAR2(64),
    DISCHARGE_DOMAIN               VARCHAR2(64),
    ACCOUNT_STATUS_NAME            VARCHAR2(64),
    ACCOUNT_STATUS_DOMAIN          VARCHAR2(64),
    GENDER_DOMAIN                  VARCHAR2(64),
    PAT_CATEGORY_SYSTEM            VARCHAR2(64),
    MOTHERS_ID                     VARCHAR2(64),
    MOTHERS_DOMAIN                 VARCHAR2(64),
    MOTHERS_FLOW_ID                VARCHAR2(64),
    MOTHERS_FLOW_DOMAIN            VARCHAR2(64),
    MOTHERS_NAME                   VARCHAR2(64),
    NOON_CODE                      VARCHAR2(16),
    PAYKIND_CODE                   VARCHAR2(64),
    PAYKIND_NAME                   VARCHAR2(64),
    SCHEMA_NO                      VARCHAR2(64),
    ORDER_NO                       VARCHAR2(64),
    SEENO                          VARCHAR2(64),
    BEGIN_TIME                     TIMESTAMP(6),
    END_TIME                       TIMESTAMP(6),
    YNBOOK                         VARCHAR2(16),
    YNFR                           VARCHAR2(16),
    APPEND_FLAG                    VARCHAR2(16),
    YNSEE                          VARCHAR2(16),
    SEE_DATE                       TIMESTAMP(6),
    TRIAGE_FLAG                    VARCHAR2(16),
    TRIAGE_OPCD                    VARCHAR2(64),
    TRIAGE_DATE                    TIMESTAMP(6),
    SEE_DPCD                       VARCHAR2(64),
    SEE_DOCD                       VARCHAR2(64),
    OUT_PATIENT_STATUS_A           VARCHAR2(16),
    OUT_PATIENT_STATUS_B           VARCHAR2(16),
    OUT_PATIENT_STATUS_C           VARCHAR2(16),
    IN_PATIENT_STATUS_A            VARCHAR2(16),
    IN_PATIENT_STATUS_B            VARCHAR2(16),
    IN_PATIENT_STATUS_C            VARCHAR2(16),
    PATIENT_SOURCE_NAME            VARCHAR2(64),
    OLD_PATIENT_ID                 VARCHAR2(64),
    OLD_PATIENT_DOMAIN             VARCHAR2(64),
    OLD_VISIT_FLOW_ID              VARCHAR2(64),
    OLD_VISIT_FLOW_DOMAIN          VARCHAR2(64),
    OLD_VISIT_ID                   VARCHAR2(64),
    OLD_PERSON_ID                  VARCHAR2(64),
    OLD_STATUS                     VARCHAR2(64),
    OLD_INFO                       VARCHAR2(255),
    ISEMERGENCY                    VARCHAR2(64),
    PAT_IP_TIMES                   VARCHAR2(16),
    DIAGNOSE_ICD                   VARCHAR2(64),
    DIAGNOSE_NAME                  VARCHAR2(64),
    CONSTRAINT PATIENT_VISIT_HISTORY_PK PRIMARY KEY (HISTORY_ID) USING INDEX
        PCTFREE 10
        INITRANS 2
        MAXTRANS 255
        TABLESPACE ATS_EMPI
        STORAGE(INITIAL 10M NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
        LOGGING
)
PCTFREE 10
MAXTRANS 255
TABLESPACE ATS_EMPI
STORAGE(INITIAL 389M NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
NOCACHE
LOGGING
/
COMMENT ON TABLE PATIENT_VISIT_HISTORY IS '病人历史就诊信息'
/
CREATE SEQUENCE PATIENT_VISIT_SEQUENCE
INCREMENT BY 1
START WITH 16285931122
MAXVALUE 9223372036854775807
NOMINVALUE
NOCYCLE 
CACHE 20
NOORDER 
/
CREATE TABLE PERSON
(
    PERSON_ID                      NUMBER NOT NULL,
    GIVEN_NAME                     VARCHAR2(64),
    MIDDLE_NAME                    VARCHAR2(64),
    FAMILY_NAME                    VARCHAR2(64),
    PREFIX                         VARCHAR2(50),
    SUFFIX                         VARCHAR2(50),
    NAME_TYPE_CD                   NUMBER,
    NAME                           VARCHAR2(64),
    NAME_CODE                      VARCHAR2(64),
    NAME_SPELL_CODE                VARCHAR2(64),
    NAME_WB_CODE                   VARCHAR2(64),
    DATE_OF_BIRTH                  DATE,
    BIRTH_PROVINCE                 VARCHAR2(128),
    BIRTH_CITY                     VARCHAR2(64),
    BIRTH_COUNTY                   VARCHAR2(64),
    BIRTH_ZIP                      VARCHAR2(32),
    BIRTH_PLACE                    VARCHAR2(255),
    MULTIPLE_BIRTH_IND             VARCHAR2(1),
    BIRTH_ORDER                    NUMBER,
    MOTHERS_MAIDEN_NAME            VARCHAR2(64),
    SSN                            VARCHAR2(64),
    IDENTITY_NO                    VARCHAR2(64),
    HEALTH_CARD                    VARCHAR2(64),
    CITIZEN_CARD                   VARCHAR2(64),
    MEDICAL_CERTIFICATE            VARCHAR2(64),
    MEICARE_PERSON                 VARCHAR2(64),
    ELDER_CERTIFICATE              VARCHAR2(64),
    OPCASENO                       VARCHAR2(64),
    INSURANCE_NO                   VARCHAR2(64),
    INSURANCE_TYPE                 VARCHAR2(64),
    INSURANCE_NAME                 VARCHAR2(64),
    GENDER_CD                      NUMBER,
    GENDER_NAME                    VARCHAR2(64),
    GENDER_DOMAIN                  VARCHAR2(64),
    ETHNIC_GROUP_CD                NUMBER,
    ETHNIC_NAME                    VARCHAR2(64),
    ETHNIC_DOMAIN                  VARCHAR2(64),
    RACE_CD                        NUMBER,
    RACE_NAME                      VARCHAR2(64),
    RACE_DOMAIN                    VARCHAR2(64),
    NATIONALITY_CD                 NUMBER,
    NATIONALITY_NAME               VARCHAR2(64),
    NATIONALITY_DOMAIN             VARCHAR2(64),
    LANGUAGE_CD                    NUMBER,
    RELIGION_CD                    NUMBER,
    MARITAL_STATUS_CD              NUMBER,
    MARITAL_STATUS_NAME            VARCHAR2(64),
    MARITAL_DOMAIN                 VARCHAR2(64),
    DEGREE                         NUMBER,
    DEGREE_NAME                    VARCHAR2(64),
    DEGREE_DOMAIN                  VARCHAR2(64),
    EMAIL                          VARCHAR2(255),
    HOME_PROVINCE                  VARCHAR2(64),
    HOME_CITY                      VARCHAR2(64),
    HOME_COUNTY                    VARCHAR2(64),
    HOME_ZIP                       VARCHAR2(64),
    HOME_ADDRESS                   VARCHAR2(512),
    REGISTERED_PROVINCE            VARCHAR2(64),
    REGISTERED_CITY                VARCHAR2(64),
    REGISTERED_COUNTY              VARCHAR2(64),
    REGISTERED_ZIP                 VARCHAR2(32),
    REGISTERED_ADDRESS             VARCHAR2(512),
    NATIVE_PROVINCE                VARCHAR2(64),
    NATIVE_CITY                    VARCHAR2(64),
    WORK_ZIP                       VARCHAR2(64),
    WORK_ADDRESS                   VARCHAR2(512),
    ADDRESS1                       VARCHAR2(64),
    POSTAL_CODE                    VARCHAR2(64),
    ADDRESS_TYPE_CD                NUMBER,
    ADDRESS2                       VARCHAR2(64),
    POSTAL_CODE1                   VARCHAR2(64),
    ADDRESS1_TYPE_CD               NUMBER,
    CITY                           VARCHAR2(64),
    STATE                          VARCHAR2(64),
    COUNTRY                        VARCHAR2(64),
    COUNTRY_CODE                   VARCHAR2(64),
    PHONE_COUNTRY_CODE             VARCHAR2(64),
    PHONE_AREA_CODE                VARCHAR2(64),
    PHONE_NUMBER                   VARCHAR2(64),
    PHONE_EXT                      VARCHAR2(64),
    PHONE_TYPE_CD                  NUMBER,
    PHONE_COUNTRY_CODE1            VARCHAR2(64),
    PHONE_AREA_CODE1               VARCHAR2(64),
    PHONE_NUMBER1                  VARCHAR2(64),
    PHONE_EXT1                     VARCHAR2(64),
    PHONE_TYPE_CD1                 NUMBER,
    COMPANY                        VARCHAR2(64),
    COMPANYCONTACTS                VARCHAR2(64),
    BIRTHPLACE_CD                  NUMBER,
    WORKSTATUS                     NUMBER,
    PROFESSION                     NUMBER,
    PROFESSION_NAME                VARCHAR2(64),
    PROFESSION_DOMAIN              VARCHAR2(64),
    PRIVATE_NUMBER                 VARCHAR2(64),
    HOME_NUMBER                    VARCHAR2(64),
    WORK_NUMBER                    VARCHAR2(64),
    GUARDIAN_PERSON                VARCHAR2(64),
    VIP                            VARCHAR2(64),
    ACCOUNT_IDENTIFIER_DOMAIN_ID   NUMBER,
    ACCOUNT                        VARCHAR2(255),
    DEATH_IND                      VARCHAR2(1),
    DEATH_TIME                     DATE,
    DATE_CREATED                   TIMESTAMP(6) NOT NULL,
    CREATOR_ID                     NUMBER NOT NULL,
    DATE_CHANGED                   TIMESTAMP(6),
    CHANGED_BY_ID                  NUMBER,
    DATE_VOIDED                    TIMESTAMP(6),
    VOIDED_BY_ID                   NUMBER,
    GROUP_NUMBER                   VARCHAR2(64),
    BLOOD_TYPE_CD                  NUMBER,
    RH_TYPE                        NUMBER,
    EMPI                           VARCHAR2(64),
    HOSPITAL_CD                    NUMBER,
    CUSTOM1                        VARCHAR2(255),
    CUSTOM2                        VARCHAR2(255),
    CUSTOM3                        VARCHAR2(255),
    CUSTOM4                        VARCHAR2(255),
    CUSTOM5                        VARCHAR2(255),
    CUSTOM6                        VARCHAR2(255),
    CUSTOM7                        VARCHAR2(255),
    CUSTOM8                        VARCHAR2(255),
    CUSTOM9                        VARCHAR2(255),
    CUSTOM10                       VARCHAR2(255),
    CUSTOM11                       VARCHAR2(255),
    CUSTOM12                       VARCHAR2(255),
    CUSTOM13                       VARCHAR2(255),
    CUSTOM14                       VARCHAR2(255),
    CUSTOM15                       VARCHAR2(255),
    CUSTOM16                       VARCHAR2(255),
    CUSTOM17                       VARCHAR2(255),
    CUSTOM18                       VARCHAR2(255),
    CUSTOM19                       VARCHAR2(255),
    CUSTOM20                       VARCHAR2(255),
    CUSTOM21                       VARCHAR2(255),
    CUSTOM22                       VARCHAR2(255),
    CUSTOM23                       VARCHAR2(255),
    CUSTOM24                       VARCHAR2(255),
    CUSTOM25                       VARCHAR2(255),
    CUSTOM26                       VARCHAR2(255),
    CUSTOM27                       VARCHAR2(255),
    CUSTOM28                       VARCHAR2(255),
    CUSTOM29                       VARCHAR2(255),
    CUSTOM30                       VARCHAR2(255),
    CARD_TYPE                      VARCHAR2(16),
    ACCOUNT_LOCKED                 VARCHAR2(64),
    ACCOUNT_LOCKED_DATE            TIMESTAMP(6),
    BIRTH_TIME                     TIMESTAMP(6),
    CONSTRAINT PERSON_PK PRIMARY KEY (PERSON_ID) USING INDEX
        PCTFREE 10
        INITRANS 2
        MAXTRANS 255
        TABLESPACE ATS_EMPI
        STORAGE(INITIAL 128M NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
        LOGGING,
    CONSTRAINT PERSON_CUSTOM16_11 UNIQUE (CUSTOM16, CUSTOM11) USING INDEX
        LOGGING
)
PCTFREE 10
MAXTRANS 255
TABLESPACE ATS_EMPI
STORAGE(INITIAL 4096M NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
NOCACHE
LOGGING
/
COMMENT ON TABLE PERSON IS '病人基本信息主表'
/
COMMENT ON COLUMN PERSON.PERSON_ID IS '序号'
/
COMMENT ON COLUMN PERSON.GIVEN_NAME IS '姓名'
/
COMMENT ON COLUMN PERSON.NAME_SPELL_CODE IS '中文姓名拼音码'
/
COMMENT ON COLUMN PERSON.NAME_WB_CODE IS '中文姓名五笔码'
/
COMMENT ON COLUMN PERSON.DATE_OF_BIRTH IS '出生日期'
/
COMMENT ON COLUMN PERSON.BIRTH_PROVINCE IS '出生地所在地省'
/
COMMENT ON COLUMN PERSON.BIRTH_CITY IS '出生地所在地市'
/
COMMENT ON COLUMN PERSON.BIRTH_COUNTY IS '出生地所在区县'
/
COMMENT ON COLUMN PERSON.BIRTH_ZIP IS '出生地邮编'
/
COMMENT ON COLUMN PERSON.BIRTH_PLACE IS '出生地'
/
COMMENT ON COLUMN PERSON.MULTIPLE_BIRTH_IND IS '多胞胎'
/
COMMENT ON COLUMN PERSON.BIRTH_ORDER IS '出生次序'
/
COMMENT ON COLUMN PERSON.MOTHERS_MAIDEN_NAME IS '母亲娘家姓'
/
COMMENT ON COLUMN PERSON.SSN IS '社会保险号'
/
COMMENT ON COLUMN PERSON.IDENTITY_NO IS '身份证号'
/
COMMENT ON COLUMN PERSON.CITIZEN_CARD IS '市民卡号'
/
COMMENT ON COLUMN PERSON.MEDICAL_CERTIFICATE IS '医疗证号'
/
COMMENT ON COLUMN PERSON.MEICARE_PERSON IS '医保个人编号'
/
COMMENT ON COLUMN PERSON.ELDER_CERTIFICATE IS '老人证号'
/
COMMENT ON COLUMN PERSON.OPCASENO IS '病历号'
/
COMMENT ON COLUMN PERSON.INSURANCE_NO IS '医疗保险号'
/
COMMENT ON COLUMN PERSON.INSURANCE_TYPE IS '医疗保险类型'
/
COMMENT ON COLUMN PERSON.INSURANCE_NAME IS '医疗保险名称'
/
COMMENT ON COLUMN PERSON.GENDER_CD IS '性别编码'
/
COMMENT ON COLUMN PERSON.GENDER_NAME IS '性别编码名'
/
COMMENT ON COLUMN PERSON.GENDER_DOMAIN IS '性别编码系统'
/
COMMENT ON COLUMN PERSON.ETHNIC_GROUP_CD IS '民族编码'
/
COMMENT ON COLUMN PERSON.ETHNIC_NAME IS '民族名称'
/
COMMENT ON COLUMN PERSON.ETHNIC_DOMAIN IS '民族编码系统'
/
COMMENT ON COLUMN PERSON.RACE_CD IS '种族编码'
/
COMMENT ON COLUMN PERSON.RACE_NAME IS '种族名称'
/
COMMENT ON COLUMN PERSON.RACE_DOMAIN IS '种族编码系统'
/
COMMENT ON COLUMN PERSON.NATIONALITY_CD IS '国籍编码'
/
COMMENT ON COLUMN PERSON.NATIONALITY_NAME IS '国籍名称'
/
COMMENT ON COLUMN PERSON.NATIONALITY_DOMAIN IS '国籍编码系统'
/
COMMENT ON COLUMN PERSON.LANGUAGE_CD IS '语言编码'
/
COMMENT ON COLUMN PERSON.RELIGION_CD IS '宗教编码'
/
COMMENT ON COLUMN PERSON.MARITAL_STATUS_CD IS '婚姻状态编码'
/
COMMENT ON COLUMN PERSON.MARITAL_STATUS_NAME IS '婚姻状态名称'
/
COMMENT ON COLUMN PERSON.MARITAL_DOMAIN IS '婚姻状态编码系统'
/
COMMENT ON COLUMN PERSON.DEGREE IS '学历编码'
/
COMMENT ON COLUMN PERSON.DEGREE_NAME IS '学历名称'
/
COMMENT ON COLUMN PERSON.DEGREE_DOMAIN IS '学历编码系统'
/
COMMENT ON COLUMN PERSON.EMAIL IS '邮件地址'
/
COMMENT ON COLUMN PERSON.HOME_PROVINCE IS '居住地所在地省'
/
COMMENT ON COLUMN PERSON.HOME_CITY IS '居住地所在地市'
/
COMMENT ON COLUMN PERSON.HOME_COUNTY IS '居住地所在区县'
/
COMMENT ON COLUMN PERSON.HOME_ZIP IS '居住地邮编'
/
COMMENT ON COLUMN PERSON.HOME_ADDRESS IS '居住地地址'
/
COMMENT ON COLUMN PERSON.REGISTERED_PROVINCE IS '户口所在地省'
/
COMMENT ON COLUMN PERSON.REGISTERED_CITY IS '户口所在地市'
/
COMMENT ON COLUMN PERSON.REGISTERED_COUNTY IS '户口所在地区县'
/
COMMENT ON COLUMN PERSON.REGISTERED_ZIP IS '户口所在地邮编'
/
COMMENT ON COLUMN PERSON.REGISTERED_ADDRESS IS '户口所在地之'
/
COMMENT ON COLUMN PERSON.NATIVE_PROVINCE IS '籍贯所在地省'
/
COMMENT ON COLUMN PERSON.NATIVE_CITY IS '籍贯所在地市'
/
COMMENT ON COLUMN PERSON.WORK_ZIP IS '工作邮编'
/
COMMENT ON COLUMN PERSON.WORK_ADDRESS IS '单位地址'
/
COMMENT ON COLUMN PERSON.PROFESSION IS '职业编码'
/
COMMENT ON COLUMN PERSON.PROFESSION_NAME IS '职业名称'
/
COMMENT ON COLUMN PERSON.PROFESSION_DOMAIN IS '职业编码系统'
/
COMMENT ON COLUMN PERSON.PRIVATE_NUMBER IS '私人电话'
/
COMMENT ON COLUMN PERSON.HOME_NUMBER IS '家庭电话'
/
COMMENT ON COLUMN PERSON.WORK_NUMBER IS '单位电话'
/
COMMENT ON COLUMN PERSON.GUARDIAN_PERSON IS '监护人'
/
COMMENT ON COLUMN PERSON.VIP IS '保密'
/
COMMENT ON COLUMN PERSON.DEATH_IND IS '死亡标识'
/
COMMENT ON COLUMN PERSON.DEATH_TIME IS '死亡事件'
/
COMMENT ON COLUMN PERSON.DATE_CREATED IS '创建日期'
/
COMMENT ON COLUMN PERSON.CREATOR_ID IS '创建者'
/
COMMENT ON COLUMN PERSON.DATE_CHANGED IS '修改日期'
/
COMMENT ON COLUMN PERSON.CHANGED_BY_ID IS '修改人'
/
COMMENT ON COLUMN PERSON.DATE_VOIDED IS '废弃日期'
/
COMMENT ON COLUMN PERSON.VOIDED_BY_ID IS '废弃标识'
/
CREATE INDEX PERSON_CUSTOM1_IDX
ON PERSON
(CUSTOM1)
PCTFREE 10
INITRANS 2
MAXTRANS 255
TABLESPACE ATS_EMPI
STORAGE(INITIAL 64K NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
LOGGING
/
CREATE INDEX PERSON_CUSTOM11_IDX
ON PERSON
(CUSTOM11)
PCTFREE 10
INITRANS 2
MAXTRANS 255
TABLESPACE ATS_EMPI
STORAGE(INITIAL 544M NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
LOGGING
/
CREATE INDEX PERSON_CUSTOM16_IDX
ON PERSON
(CUSTOM16)
PCTFREE 10
INITRANS 2
MAXTRANS 255
TABLESPACE ATS_EMPI
STORAGE(INITIAL 176M NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
LOGGING
/
CREATE INDEX PERSON_DATE_VOIDED_IDX
ON PERSON_IDENTIFIER
(DATE_VOIDED)
PCTFREE 10
INITRANS 2
MAXTRANS 255
TABLESPACE ATS_EMPI
STORAGE(INITIAL 64K NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
LOGGING
/
CREATE INDEX PERSON_DATEOFBIRTH_IDX
ON PERSON
(DATE_OF_BIRTH)
PCTFREE 10
INITRANS 2
MAXTRANS 255
TABLESPACE ATS_EMPI
STORAGE(INITIAL 160M NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
LOGGING
/
CREATE INDEX PERSON_DATEVOIDED_IDX
ON PERSON
(DATE_VOIDED)
PCTFREE 10
INITRANS 2
MAXTRANS 255
TABLESPACE ATS_EMPI
STORAGE(INITIAL 64K NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
LOGGING
/
CREATE INDEX PERSON_EMPI_IDX
ON PERSON
(EMPI)
PCTFREE 10
INITRANS 2
MAXTRANS 255
TABLESPACE ATS_EMPI
STORAGE(INITIAL 368M NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
LOGGING
/
CREATE OR REPLACE VIEW PERSON_FOR_RELEVANCE
    (NAME,PATIENT_ID,PATIENT_DOMAIN,EMPI)
AS
select "NAME", "PATIENT_ID", "PATIENT_DOMAIN", "EMPI"
  from (select given_name name,
               custom16   patient_id,
               custom11   patient_domain,
               empi
          from ats_empi.person
         where date_voided is null
        UNION
        select A.given_name        name,
               B.visit_flow_id     patient_id,
               B.visit_flow_domain patient_domain,
               B.custom1           empi
          from ats_empi.person A, ats_empi.patient_visit B
         where A.Date_Voided is null
           --and A.CUSTOM14 is null
           and A.CUSTOM16 = B.Patient_Id
           and A.custom11 = B.person_domain)
 where empi in (select empi from ats_empi.empi where date_voided is null)
/
CREATE INDEX PERSON_GIVENNAME_IDX
ON PERSON
(GIVEN_NAME)
PCTFREE 10
INITRANS 2
MAXTRANS 255
TABLESPACE ATS_EMPI
STORAGE(INITIAL 144M NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
LOGGING
/
CREATE INDEX PERSON_ID_IDX
ON PERSON_IDENTIFIER
(PERSON_ID)
PCTFREE 10
INITRANS 2
MAXTRANS 255
TABLESPACE ATS_EMPI
STORAGE(INITIAL 256M NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
LOGGING
/
CREATE TABLE PERSON_IDENTIFIER
(
    PERSON_IDENTIFIER_ID           NUMBER NOT NULL,
    DATE_CREATED                   TIMESTAMP(6) NOT NULL,
    DATE_VOIDED                    TIMESTAMP(6),
    IDENTIFIER                     VARCHAR2(255) NOT NULL,
    PERSON_ID                      NUMBER NOT NULL,
    CREATOR_ID                     NUMBER NOT NULL,
    IDENTIFIER_DOMAIN_ID           NUMBER NOT NULL,
    VOIDED_BY_ID                   NUMBER,
    CUSTOM1                        VARCHAR2(255),
    CUSTOM2                        VARCHAR2(255),
    CUSTOM3                        VARCHAR2(255),
    CUSTOM4                        VARCHAR2(255),
    CUSTOM5                        VARCHAR2(255),
    CONSTRAINT PERSON_IDENTIFIER_PK PRIMARY KEY (PERSON_IDENTIFIER_ID) USING INDEX
        PCTFREE 10
        INITRANS 2
        MAXTRANS 255
        TABLESPACE ATS_EMPI
        STORAGE(INITIAL 247M NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
        LOGGING
)
PCTFREE 10
MAXTRANS 255
TABLESPACE ATS_EMPI
STORAGE(INITIAL 1569M NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
NOCACHE
LOGGING
/
CREATE INDEX PERSON_IDENTIFIER_ID_IDX
ON PERSON_IDENTIFIER
(IDENTIFIER_DOMAIN_ID)
PCTFREE 10
INITRANS 2
MAXTRANS 255
TABLESPACE ATS_EMPI
STORAGE(INITIAL 400M NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
LOGGING
/
CREATE INDEX PERSON_IDENTIFIER_IDX
ON PERSON_IDENTIFIER
(IDENTIFIER)
PCTFREE 10
INITRANS 2
MAXTRANS 255
TABLESPACE ATS_EMPI
STORAGE(INITIAL 512M NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
LOGGING
/
CREATE SEQUENCE PERSON_IDENTIFIER_SEQ
INCREMENT BY 1
START WITH 2279642844
NOMAXVALUE
NOMINVALUE
NOCYCLE 
CACHE 20
NOORDER 
/
CREATE INDEX PERSON_IDENTITYNO_IDX
ON PERSON
(IDENTITY_NO)
PCTFREE 10
INITRANS 2
MAXTRANS 255
TABLESPACE ATS_EMPI
STORAGE(INITIAL 15M NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
LOGGING
/
CREATE TABLE PERSON_IN_OUT
(
    PERSON_IN_OUT_ID               NUMBER NOT NULL,
    PATIENT_ID                     VARCHAR2(64),
    PATIENT_DOMAIN                 VARCHAR2(64),
    VISIT_FLOW_ID                  VARCHAR2(64),
    VISIT_FLOW_DOMAIN              VARCHAR2(64),
    NAME                           VARCHAR2(64),
    DATE_OF_BIRTH                  TIMESTAMP(6),
    SEX                            VARCHAR2(8),
    IDENTITY_NO                    VARCHAR2(64),
    INSURANCE_NO                   VARCHAR2(64),
    INSURANCE_TYPE                 VARCHAR2(16),
    CURRENT_BED                    VARCHAR2(16),
    CURRENT_DEP                    VARCHAR2(16),
    CURRENT_ROOM                   VARCHAR2(16),
    OLD_CONTENT                    VARCHAR2(512),
    NEW_CONTENT                    VARCHAR2(512),
    CHANGE_TYPE                    VARCHAR2(32),
    CHANGE_DESCRIPTION             VARCHAR2(512),
    OPER_ID                        VARCHAR2(32),
    DATE_CREATED                   TIMESTAMP(6),
    CUSTOM1                        VARCHAR2(64),
    CUSTOM2                        VARCHAR2(64),
    CUSTOM3                        VARCHAR2(64),
    CUSTOM4                        VARCHAR2(64),
    CUSTOM5                        VARCHAR2(64),
    CONSTRAINT PERSON_IN_OUT_ID_PK PRIMARY KEY (PERSON_IN_OUT_ID) USING INDEX
        PCTFREE 10
        INITRANS 2
        MAXTRANS 255
        TABLESPACE ATS_EMPI
        STORAGE( BUFFER_POOL DEFAULT)
        LOGGING
)
PCTFREE 10
MAXTRANS 255
TABLESPACE ATS_EMPI
STORAGE( BUFFER_POOL DEFAULT)
NOCACHE
LOGGING
/
COMMENT ON TABLE PERSON_IN_OUT IS '病人出入转流水记录'
/
COMMENT ON COLUMN PERSON_IN_OUT.PERSON_IN_OUT_ID IS '出入转流水记录PK'
/
COMMENT ON COLUMN PERSON_IN_OUT.PATIENT_ID IS '病人ID'
/
COMMENT ON COLUMN PERSON_IN_OUT.PATIENT_DOMAIN IS '病人域ID'
/
COMMENT ON COLUMN PERSON_IN_OUT.VISIT_FLOW_ID IS '病人流水ID'
/
COMMENT ON COLUMN PERSON_IN_OUT.VISIT_FLOW_DOMAIN IS '病人流水域ID'
/
COMMENT ON COLUMN PERSON_IN_OUT.NAME IS '病人姓名'
/
COMMENT ON COLUMN PERSON_IN_OUT.DATE_OF_BIRTH IS '病人生日'
/
COMMENT ON COLUMN PERSON_IN_OUT.SEX IS '病人性别'
/
COMMENT ON COLUMN PERSON_IN_OUT.IDENTITY_NO IS '身份证号'
/
COMMENT ON COLUMN PERSON_IN_OUT.INSURANCE_NO IS '医保卡号'
/
COMMENT ON COLUMN PERSON_IN_OUT.INSURANCE_TYPE IS '医保卡类型'
/
COMMENT ON COLUMN PERSON_IN_OUT.CURRENT_BED IS '当前所在床位'
/
COMMENT ON COLUMN PERSON_IN_OUT.CURRENT_DEP IS '当前所在科室'
/
COMMENT ON COLUMN PERSON_IN_OUT.CURRENT_ROOM IS '当前所在病区'
/
COMMENT ON COLUMN PERSON_IN_OUT.OLD_CONTENT IS '原内容'
/
COMMENT ON COLUMN PERSON_IN_OUT.NEW_CONTENT IS '新内容'
/
COMMENT ON COLUMN PERSON_IN_OUT.CHANGE_TYPE IS '变更类型'
/
COMMENT ON COLUMN PERSON_IN_OUT.CHANGE_DESCRIPTION IS '变更描述'
/
COMMENT ON COLUMN PERSON_IN_OUT.OPER_ID IS '操作员'
/
COMMENT ON COLUMN PERSON_IN_OUT.DATE_CREATED IS '记录日期'
/
COMMENT ON COLUMN PERSON_IN_OUT.CUSTOM1 IS '备注1'
/
COMMENT ON COLUMN PERSON_IN_OUT.CUSTOM2 IS '备注2'
/
COMMENT ON COLUMN PERSON_IN_OUT.CUSTOM3 IS '备注3'
/
COMMENT ON COLUMN PERSON_IN_OUT.CUSTOM4 IS '备注4'
/
COMMENT ON COLUMN PERSON_IN_OUT.CUSTOM5 IS '备注5'
/
CREATE SEQUENCE PERSON_IN_OUT_SEQ
INCREMENT BY 1
START WITH 2713484122
MAXVALUE 9223372036854775807
NOMINVALUE
NOCYCLE 
CACHE 20
NOORDER 
/
CREATE INDEX PERSON_INSURANCENO_IDX
ON PERSON
(INSURANCE_NO)
PCTFREE 10
INITRANS 2
MAXTRANS 255
TABLESPACE ATS_EMPI
STORAGE(INITIAL 832K NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
LOGGING
/
CREATE TABLE PERSON_LINK
(
    PERSON_LINK_ID                 NUMBER NOT NULL,
    DATE_CREATED                   TIMESTAMP(6) NOT NULL,
    WEIGHT                         NUMBER NOT NULL,
    RH_PERSON_ID                   NUMBER NOT NULL,
    CREATOR_ID                     NUMBER NOT NULL,
    LH_PERSON_ID                   NUMBER NOT NULL,
    CUSTOM1                        VARCHAR2(255),
    CUSTOM2                        VARCHAR2(255),
    CUSTOM3                        VARCHAR2(255),
    CUSTOM4                        VARCHAR2(255),
    CUSTOM5                        VARCHAR2(255),
    CONSTRAINT PERSON_LINK_PK PRIMARY KEY (PERSON_LINK_ID) USING INDEX
        PCTFREE 10
        INITRANS 2
        MAXTRANS 255
        TABLESPACE ATS_EMPI
        STORAGE(INITIAL 80M NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
        LOGGING
)
PCTFREE 10
MAXTRANS 255
TABLESPACE ATS_EMPI
STORAGE(INITIAL 128M NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
NOCACHE
LOGGING
/
CREATE TABLE PERSON_LINK_CANCEL
(
    PERSON_LINK_CANCEL_ID          NUMBER NOT NULL,
    EMPI                           VARCHAR2(64) NOT NULL,
    PERSON_ID                      NUMBER NOT NULL,
    DATE_CREATED                   TIMESTAMP(6),
    CONSTRAINT PERSON_LINK_CANCEL_PK PRIMARY KEY (PERSON_LINK_CANCEL_ID) USING INDEX
        PCTFREE 10
        INITRANS 2
        MAXTRANS 255
        TABLESPACE ATS_EMPI
        STORAGE(INITIAL 64K NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
        LOGGING
)
PCTFREE 10
MAXTRANS 255
TABLESPACE ATS_EMPI
STORAGE(INITIAL 64K NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
NOCACHE
LOGGING
/
CREATE INDEX PERSON_LINK_LH_IDX
ON PERSON_LINK
(LH_PERSON_ID)
PCTFREE 10
INITRANS 2
MAXTRANS 255
TABLESPACE ATS_EMPI
STORAGE(INITIAL 48M NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
LOGGING
/
CREATE TABLE PERSON_LINK_REVIEW
(
    PERSON_LINK_REVIEW_ID          NUMBER NOT NULL,
    RH_PERSON_ID                   NUMBER NOT NULL,
    LH_PERSON_ID                   NUMBER NOT NULL,
    DATE_CREATED                   TIMESTAMP(6) NOT NULL,
    WEIGHT                         NUMBER,
    CREATOR_ID                     NUMBER NOT NULL,
    REVIEWER_ID                    NUMBER,
    DATE_REVIEWED                  NUMBER,
    CUSTOM1                        VARCHAR2(255),
    CUSTOM2                        VARCHAR2(255),
    CUSTOM3                        VARCHAR2(255),
    CUSTOM4                        VARCHAR2(255),
    CUSTOM5                        VARCHAR2(255),
    CONSTRAINT PERSON_LINK_REVIEW_PK PRIMARY KEY (PERSON_LINK_REVIEW_ID) USING INDEX
        PCTFREE 10
        INITRANS 2
        MAXTRANS 255
        TABLESPACE ATS_EMPI
        STORAGE(INITIAL 64K NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
        LOGGING
)
PCTFREE 10
MAXTRANS 255
TABLESPACE ATS_EMPI
STORAGE(INITIAL 64K NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
NOCACHE
LOGGING
/
CREATE SEQUENCE PERSON_LINK_REVIEW_SEQ
INCREMENT BY 1
START WITH 122
MAXVALUE 9223372036854775807
NOMINVALUE
NOCYCLE 
CACHE 20
NOORDER 
/
CREATE INDEX PERSON_LINK_RH_IDX
ON PERSON_LINK
(RH_PERSON_ID)
PCTFREE 10
INITRANS 2
MAXTRANS 255
TABLESPACE ATS_EMPI
STORAGE(INITIAL 53M NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
LOGGING
/
CREATE SEQUENCE PERSON_LINK_SEQ
INCREMENT BY 1
START WITH 3031898054
NOMAXVALUE
NOMINVALUE
NOCYCLE 
CACHE 20
NOORDER 
/
CREATE SEQUENCE PERSON_SEQ
INCREMENT BY 1
START WITH 1583328602
MAXVALUE 9223372036854775807
NOMINVALUE
NOCYCLE 
CACHE 20
NOORDER 
/
CREATE SEQUENCE PERSON_SEQUENCE
INCREMENT BY 1
START WITH 1789607122
MAXVALUE 9223372036854775807
NOMINVALUE
NOCYCLE 
CACHE 20
NOORDER 
/
CREATE INDEX PERSON_SSN_IDX
ON PERSON
(SSN)
PCTFREE 10
INITRANS 2
MAXTRANS 255
TABLESPACE ATS_EMPI
STORAGE(INITIAL 64K NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
LOGGING
/
CREATE INDEX PERSONIDEN_CUSTOM1_IDX
ON PERSON_IDENTIFIER
(CUSTOM1)
PCTFREE 10
INITRANS 2
MAXTRANS 255
TABLESPACE ATS_EMPI
STORAGE(INITIAL 64K NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
LOGGING
/
CREATE INDEX REF_IDX
ON AUDIT_EVENT
(REF_PERSON_ID)
PCTFREE 10
INITRANS 2
MAXTRANS 255
TABLESPACE ATS_EMPI
STORAGE(INITIAL 736M NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
LOGGING
/
CREATE TABLE REG_ERROR_EVENT
(
    REG_ERROR_ID                   NUMBER,
    BASE_ID                        VARCHAR2(32),
    BASE_DOMAIN                    VARCHAR2(32),
    BASE_NAME                      VARCHAR2(128),
    REG_ID                         VARCHAR2(32),
    REG_DOMAIN                     VARCHAR2(32),
    REG_NAME                       VARCHAR2(128),
    ERROR_TYPE                     VARCHAR2(16),
    ERROR_DESCRIPTION              VARCHAR2(256),
    ERROR_DATE                     TIMESTAMP(6),
    HANDLE_STATUS                  VARCHAR2(16),
    HANDLE_DATE                    TIMESTAMP(6),
    NOTIFY_STATUS                  VARCHAR2(16),
    NOTIFY_DATE                    TIMESTAMP(6),
    CUSTOM1                        VARCHAR2(64),
    CUSTOM2                        VARCHAR2(64),
    CUSTOM3                        VARCHAR2(64)
)
PCTFREE 10
MAXTRANS 255
TABLESPACE ATS_EMPI
STORAGE(INITIAL 64K NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
NOCACHE
LOGGING
/
CREATE SEQUENCE REG_ERROR_SEQ
INCREMENT BY 1
START WITH 2713484102
MAXVALUE 9223372036854775807
NOMINVALUE
NOCYCLE 
CACHE 20
NOORDER 
/
CREATE TABLE RELEVANCE_AND_ID
(
    RELEVANCE_AND_ID               NUMBER NOT NULL,
    REG_ID                         VARCHAR2(64),
    REG_DOMAIN                     VARCHAR2(64),
    REG_NAME                       VARCHAR2(64),
    RELEVANCE_ID                   VARCHAR2(64),
    RELEVANCE_DOMAIN               VARCHAR2(64),
    RELEVANCE_NAME                 VARCHAR2(64),
    EMPI                           VARCHAR2(64),
    DATE_CREATED                   TIMESTAMP(6),
    CUSTOM1                        VARCHAR2(64),
    CUSTOM2                        VARCHAR2(64),
    CONSTRAINT RELEVANCE_AND_ID_PK PRIMARY KEY (RELEVANCE_AND_ID) USING INDEX
        PCTFREE 10
        INITRANS 2
        MAXTRANS 255
        TABLESPACE ATS_EMPI
        STORAGE(INITIAL 64K NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
        LOGGING
)
PCTFREE 10
MAXTRANS 255
TABLESPACE ATS_EMPI
STORAGE(INITIAL 64K NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
NOCACHE
LOGGING
/
COMMENT ON TABLE RELEVANCE_AND_ID IS '关联ID记录'
/
COMMENT ON COLUMN RELEVANCE_AND_ID.RELEVANCE_AND_ID IS '关联ID记录PK'
/
COMMENT ON COLUMN RELEVANCE_AND_ID.REG_ID IS '注册病人ID'
/
COMMENT ON COLUMN RELEVANCE_AND_ID.REG_DOMAIN IS '注册病人域ID'
/
COMMENT ON COLUMN RELEVANCE_AND_ID.REG_NAME IS '注册病人姓名'
/
COMMENT ON COLUMN RELEVANCE_AND_ID.RELEVANCE_ID IS '注册病人关联ID'
/
COMMENT ON COLUMN RELEVANCE_AND_ID.RELEVANCE_DOMAIN IS '注册病人关联域ID'
/
COMMENT ON COLUMN RELEVANCE_AND_ID.RELEVANCE_NAME IS '注册病人关联ID姓名'
/
COMMENT ON COLUMN RELEVANCE_AND_ID.EMPI IS 'EMPI'
/
COMMENT ON COLUMN RELEVANCE_AND_ID.DATE_CREATED IS '创建日期'
/
COMMENT ON COLUMN RELEVANCE_AND_ID.CUSTOM1 IS '备注1'
/
COMMENT ON COLUMN RELEVANCE_AND_ID.CUSTOM2 IS '备注2'
/
CREATE SEQUENCE RELEVANCE_AND_ID_SEQ
INCREMENT BY 1
START WITH 2713484142
MAXVALUE 9223372036854775807
NOMINVALUE
NOCYCLE 
CACHE 20
NOORDER 
/
CREATE TABLE ROLE
(
    ID                             NUMBER NOT NULL,
    NAME                           VARCHAR2(20),
    DESCRIPTION                    VARCHAR2(64),
    CONSTRAINT ROLE_PK PRIMARY KEY (ID) USING INDEX
        PCTFREE 10
        INITRANS 2
        MAXTRANS 255
        TABLESPACE ATS_EMPI
        STORAGE(INITIAL 64K NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
        LOGGING
)
PCTFREE 10
MAXTRANS 255
TABLESPACE ATS_EMPI
STORAGE(INITIAL 64K NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
NOCACHE
LOGGING
/
CREATE OR REPLACE PROCEDURE          UPDATE_TYPE_A(IN_EMPI IN VARCHAR2,IN_OLD_EMPI IN VARCHAR2,IN_DOMAIN_ID IN VARCHAR2,IN_DOMAIN_NAME IN VARCHAR2,IN_PERSONID IN VARCHAR2,IN_REPLACEID IN VARCHAR2,OUT_V_MSG OUT VARCHAR2)
IS
SQL_COUNTS     NUMBER;
GLOBAL_DOMAIN_CODE      VARCHAR2(64);
IDENTIFIER_DOMAIN       VARCHAR2(64);
PATIENTID               VARCHAR2(64);

BEGIN

--PERSON_IDENTIFIER--2013-11-29:PANMIN

  SELECT IDENTIFIER_DOMAIN_ID INTO GLOBAL_DOMAIN_CODE FROM ATS_DICT.IDENTIFIER_DOMAIN_DICT WHERE UNIVERSAL_IDENTIFIER ='2.16.840.1.113883.4.487.2' AND ROWNUM<2;

  SELECT IDENTIFIER_DOMAIN_ID INTO IDENTIFIER_DOMAIN FROM ATS_DICT.IDENTIFIER_DOMAIN_DICT WHERE UNIVERSAL_IDENTIFIER = IN_DOMAIN_ID AND NAMESPACE_IDENTIFIER = IN_DOMAIN_NAME;

  SELECT IDENTIFIER INTO PATIENTID FROM ATS_EMPI.PERSON_IDENTIFIER WHERE PERSON_ID = IN_PERSONID AND IDENTIFIER_DOMAIN_ID = IDENTIFIER_DOMAIN AND DATE_VOIDED IS NULL;

  SELECT COUNT(*) INTO SQL_COUNTS FROM ATS_EMPI.PERSON_IDENTIFIER WHERE PERSON_ID = IN_PERSONID AND CUSTOM1 = IN_OLD_EMPI AND DATE_VOIDED IS NULL;

  IF SQL_COUNTS = 2 THEN

    UPDATE ATS_EMPI.PERSON_IDENTIFIER SET CUSTOM2 = CUSTOM1,CUSTOM1 = IN_EMPI WHERE PERSON_ID = IN_PERSONID AND CUSTOM1 = IN_OLD_EMPI AND IDENTIFIER_DOMAIN_ID !=GLOBAL_DOMAIN_CODE AND DATE_VOIDED IS NULL;

    UPDATE ATS_EMPI.PERSON_IDENTIFIER SET PERSON_ID = IN_REPLACEID WHERE PERSON_ID = IN_PERSONID AND IDENTIFIER_DOMAIN_ID = GLOBAL_DOMAIN_CODE AND DATE_VOIDED IS NULL;

    INSERT INTO ATS_EMPI.PERSON_IDENTIFIER VALUES (ATS_EMPI.PERSON_IDENTIFIER_SEQ.nextval,SYSDATE,NULL,IN_EMPI,IN_PERSONID,20120920000001,GLOBAL_DOMAIN_CODE,NULL,IN_EMPI,NULL,NULL,NULL,NULL);

  END IF;

  IF SQL_COUNTS = 1 THEN

       UPDATE ATS_EMPI.PERSON_IDENTIFIER SET CUSTOM2 = CUSTOM1,CUSTOM1 = IN_EMPI WHERE PERSON_ID = IN_PERSONID AND CUSTOM1 = IN_OLD_EMPI AND IDENTIFIER_DOMAIN_ID !=GLOBAL_DOMAIN_CODE AND DATE_VOIDED IS NULL;

       INSERT INTO ATS_EMPI.PERSON_IDENTIFIER VALUES (ATS_EMPI.PERSON_IDENTIFIER_SEQ.nextval,SYSDATE,NULL,IN_EMPI,IN_PERSONID,20120920000001,GLOBAL_DOMAIN_CODE,NULL,IN_EMPI,NULL,NULL,NULL,NULL);

  END IF;

 --PATIENT_VISIT--2013-11-29
   UPDATE ATS_EMPI.PATIENT_VISIT SET CUSTOM1=IN_EMPI  WHERE PATIENT_ID = PATIENTID AND PERSON_DOMAIN = IN_DOMAIN_ID AND VOIDED_DATE IS NULL;

 --PATIENT_VISIT_HISTORY-2013-11-29
   UPDATE ATS_EMPI.PATIENT_VISIT_HISTORY SET CUSTOM1=IN_EMPI,GLOBAL_ID = IN_EMPI WHERE PATIENT_ID = PATIENTID AND PERSON_DOMAIN = IN_DOMAIN_ID AND VOIDED_DATE IS NULL;

--MERGE_EVENT--
  insert into ats_empi.merge_event select 
	 ats_empi.merge_event_seq.nextval,
	 sys_guid(),
         person_id,
         custom16,
         custom11,
         given_name,
         gender_cd,
         identity_no,
         date_of_birth,
         IN_old_empi,
         IN_empi,
         'UPDATE_A',
         '1',
         sysdate,
         '0',
         null,
         null,
         '0',
         null,
         null
    from ats_empi.person
    where person_id = IN_personid;

   OUT_V_MSG:='1';

EXCEPTION
   
   WHEN OTHERS THEN

      ROLLBACK;

      OUT_V_MSG:='0';

      RAISE_APPLICATION_ERROR(-20010,'UPDATE_TYPE_A: 脚本执行错误');

END;
/
CREATE OR REPLACE PROCEDURE          UPDATE_TYPE_B(IN_EMPI IN VARCHAR2,IN_OLD_EMPI IN VARCHAR2,IN_DOMAIN_ID IN VARCHAR2,IN_DOMAIN_NAME IN VARCHAR2,IN_PERSONID IN VARCHAR2,IN_REPLACEID IN VARCHAR2,OUT_V_MSG OUT VARCHAR2)
IS
SQL_COUNTS     NUMBER;
GLOBAL_DOMAIN_CODE      VARCHAR2(64);
IDENTIFIER_DOMAIN       VARCHAR2(64);
PATIENTID               VARCHAR2(64);

BEGIN

--PERSON_IDENTIFIER--2013-11-29:PANMIN

  SELECT IDENTIFIER_DOMAIN_ID INTO GLOBAL_DOMAIN_CODE FROM ATS_DICT.IDENTIFIER_DOMAIN_DICT WHERE UNIVERSAL_IDENTIFIER ='2.16.840.1.113883.4.487.2' AND ROWNUM<2;

  SELECT IDENTIFIER_DOMAIN_ID INTO IDENTIFIER_DOMAIN FROM ATS_DICT.IDENTIFIER_DOMAIN_DICT WHERE UNIVERSAL_IDENTIFIER = IN_DOMAIN_ID AND NAMESPACE_IDENTIFIER = IN_DOMAIN_NAME;

  SELECT IDENTIFIER INTO PATIENTID FROM ATS_EMPI.PERSON_IDENTIFIER WHERE PERSON_ID = IN_PERSONID AND IDENTIFIER_DOMAIN_ID = IDENTIFIER_DOMAIN AND DATE_VOIDED IS NULL;

  UPDATE ATS_EMPI.PERSON_IDENTIFIER SET CUSTOM2 = NULL,CUSTOM1 = IN_EMPI WHERE DATE_VOIDED IS NULL AND PERSON_ID = IN_PERSONID AND CUSTOM1 = IN_OLD_EMPI AND IDENTIFIER_DOMAIN_ID !=GLOBAL_DOMAIN_CODE;

  UPDATE ATS_EMPI.PERSON_IDENTIFIER SET DATE_VOIDED = SYSDATE WHERE PERSON_ID = IN_PERSONID AND CUSTOM1 = IN_OLD_EMPI AND IDENTIFIER_DOMAIN_ID = GLOBAL_DOMAIN_CODE AND DATE_VOIDED IS NULL;


 --PATIENT_VISIT--2013-11-29
   UPDATE ATS_EMPI.PATIENT_VISIT SET CUSTOM1=IN_EMPI WHERE PATIENT_ID = PATIENTID AND PERSON_DOMAIN = IN_DOMAIN_ID AND VOIDED_DATE IS NULL;

 --PATIENT_VISIT_HISTORY-2013-11-29
   UPDATE ATS_EMPI.PATIENT_VISIT_HISTORY SET CUSTOM1= IN_EMPI,GLOBAL_ID = IN_EMPI WHERE PATIENT_ID = PATIENTID AND PERSON_DOMAIN = IN_DOMAIN_ID AND VOIDED_DATE IS NULL;

--MERGE_EVENT--
  insert into ats_empi.merge_event select 
	 ats_empi.merge_event_seq.nextval,
	 sys_guid(),
         person_id,
         custom16,
         custom11,
         given_name,
         gender_cd,
         identity_no,
         date_of_birth,
         IN_old_empi,
         IN_empi,
         'UPDATE_B',
         '1',
         sysdate,
         '0',
         null,
         null,
         '0',
         null,
         null
    from ats_empi.person
    where person_id = IN_personid;

   OUT_V_MSG:='1';

   EXCEPTION

     WHEN OTHERS THEN

       ROLLBACK;

       OUT_V_MSG:='0';

       RAISE_APPLICATION_ERROR(-20010,'UPDATE_TYPE_B: 脚本执行错误');

END;
/
CREATE OR REPLACE PROCEDURE          UPDATE_TYPE_C(IN_NEW_EMPI IN VARCHAR2,IN_OLD_EMPI IN VARCHAR2,IN_DOMAIN_ID IN VARCHAR2,IN_DOMAIN_NAME IN VARCHAR2,IN_PERSONID IN VARCHAR2,IN_REPLACEID IN VARCHAR2,OUT_V_MSG OUT VARCHAR2)
IS
SQL_COUNTS     NUMBER;
GLOBAL_DOMAIN_CODE      VARCHAR2(64);
IDENTIFIER_DOMAIN       VARCHAR2(64);
PATIENTID               VARCHAR2(64);

BEGIN

  SELECT IDENTIFIER_DOMAIN_ID INTO GLOBAL_DOMAIN_CODE FROM ATS_DICT.IDENTIFIER_DOMAIN_DICT WHERE UNIVERSAL_IDENTIFIER ='2.16.840.1.113883.4.487.2' AND ROWNUM<2;

  SELECT IDENTIFIER_DOMAIN_ID INTO IDENTIFIER_DOMAIN FROM ATS_DICT.IDENTIFIER_DOMAIN_DICT WHERE UNIVERSAL_IDENTIFIER = IN_DOMAIN_ID AND NAMESPACE_IDENTIFIER = IN_DOMAIN_NAME;

  SELECT IDENTIFIER INTO PATIENTID FROM ATS_EMPI.PERSON_IDENTIFIER WHERE PERSON_ID = IN_PERSONID AND IDENTIFIER_DOMAIN_ID = IDENTIFIER_DOMAIN AND DATE_VOIDED IS NULL;

--PERSON--2013-11-29:PANMIN

  UPDATE ATS_EMPI.PERSON SET EMPI = IN_NEW_EMPI WHERE EMPI= IN_OLD_EMPI AND DATE_VOIDED IS NULL;

  --DBMS_OUTPUT.PUT_LINE(OLD_EMPI);

--PERSON_IDENTIFIER--2013-11-29:PANMIN

  UPDATE ATS_EMPI.PERSON_IDENTIFIER SET DATE_VOIDED = SYSDATE WHERE CUSTOM1 = IN_OLD_EMPI AND IDENTIFIER_DOMAIN_ID = GLOBAL_DOMAIN_CODE AND DATE_VOIDED IS NULL;

  UPDATE ATS_EMPI.PERSON_IDENTIFIER SET CUSTOM2 = NULL,CUSTOM1 = IN_NEW_EMPI WHERE CUSTOM1 = IN_OLD_EMPI AND IDENTIFIER_DOMAIN_ID !=GLOBAL_DOMAIN_CODE AND DATE_VOIDED IS NULL;

 --PATIENT_VISIT--2013-11-29

   UPDATE ATS_EMPI.PATIENT_VISIT SET CUSTOM1 = IN_NEW_EMPI WHERE CUSTOM1 = IN_OLD_EMPI AND VOIDED_DATE IS NULL;

 --PATIENT_VISIT_HISTORY-2013-11-29

   UPDATE ATS_EMPI.PATIENT_VISIT_HISTORY SET CUSTOM1 = IN_NEW_EMPI,GLOBAL_ID = IN_NEW_EMPI WHERE CUSTOM1 = IN_OLD_EMPI AND VOIDED_DATE IS NULL;

--EMPI-2013-12-3

   UPDATE ATS_EMPI.EMPI SET DATE_VOIDED = SYSDATE WHERE EMPI = IN_OLD_EMPI AND DATE_VOIDED IS NULL;

--MERGE_EVENT--
  insert into ats_empi.merge_event select 
	 ats_empi.merge_event_seq.nextval,
	 sys_guid(),
         person_id,
         custom16,
         custom11,
         given_name,
         gender_cd,
         identity_no,
         date_of_birth,
         IN_old_empi,
         IN_NEW_empi,
         'UPDATE_B',
         '1',
         sysdate,
         '0',
         null,
         null,
         '0',
         null,
         null
    from ats_empi.person
    where person_id = IN_personid;

   OUT_V_MSG:='1';

   EXCEPTION

       WHEN OTHERS THEN

       ROLLBACK;

       OUT_V_MSG:='0';

      RAISE_APPLICATION_ERROR(-20010,'UPDATE_TYPE_C: 脚本执行错误');

END;
/
CREATE TABLE USER_FILE
(
    USER_FILE_ID                   NUMBER NOT NULL,
    USER_ID                        NUMBER NOT NULL,
    NAME                           VARCHAR2(255) NOT NULL,
    FILENAME                       VARCHAR2(255) NOT NULL,
    IMPORTED_IND                   CHAR(1) DEFAULT 'N',
    DATE_CREATED                   TIMESTAMP(6) NOT NULL,
    CUSTOM1                        VARCHAR2(255),
    CUSTOM2                        VARCHAR2(255),
    CUSTOM3                        VARCHAR2(255),
    CUSTOM4                        VARCHAR2(255),
    CUSTOM5                        VARCHAR2(255),
    CONSTRAINT USER_FILE_PK PRIMARY KEY (USER_FILE_ID) USING INDEX
        PCTFREE 10
        INITRANS 2
        MAXTRANS 255
        TABLESPACE ATS_EMPI
        STORAGE(INITIAL 64K NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
        LOGGING
)
PCTFREE 10
MAXTRANS 255
TABLESPACE ATS_EMPI
STORAGE(INITIAL 64K NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
NOCACHE
LOGGING
/
CREATE SEQUENCE USER_FILE_SEQ
INCREMENT BY 1
START WITH 122
MAXVALUE 9223372036854775807
NOMINVALUE
NOCYCLE 
CACHE 20
NOORDER 
/
CREATE TABLE USER_ROLE
(
    USER_ID                        NUMBER NOT NULL,
    ROLE_ID                        NUMBER NOT NULL,
    CUSTOM1                        VARCHAR2(255),
    CUSTOM2                        VARCHAR2(255),
    CUSTOM3                        VARCHAR2(255),
    CUSTOM4                        VARCHAR2(255),
    CUSTOM5                        VARCHAR2(255),
    CONSTRAINT USER_ROLE_PK PRIMARY KEY (USER_ID, ROLE_ID) USING INDEX
        PCTFREE 10
        INITRANS 2
        MAXTRANS 255
        TABLESPACE ATS_EMPI
        STORAGE(INITIAL 64K NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
        LOGGING
)
PCTFREE 10
MAXTRANS 255
TABLESPACE ATS_EMPI
STORAGE(INITIAL 64K NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
NOCACHE
LOGGING
/
CREATE TABLE USER_SESSION
(
    SESSION_ID                     NUMBER NOT NULL,
    DATE_CREATED                   TIMESTAMP(6) NOT NULL,
    SESSION_KEY                    VARCHAR2(255),
    USER_ID                        NUMBER NOT NULL,
    CUSTOM1                        VARCHAR2(255),
    CUSTOM2                        VARCHAR2(255),
    CUSTOM3                        VARCHAR2(255),
    CUSTOM4                        VARCHAR2(255),
    CUSTOM5                        VARCHAR2(255),
    CONSTRAINT USER_SESSION_PK PRIMARY KEY (SESSION_ID) USING INDEX
        PCTFREE 10
        INITRANS 2
        MAXTRANS 255
        TABLESPACE ATS_EMPI
        STORAGE(INITIAL 9M NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
        LOGGING
)
PCTFREE 10
MAXTRANS 255
TABLESPACE ATS_EMPI
STORAGE(INITIAL 27M NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
NOCACHE
LOGGING
/
CREATE SEQUENCE USER_SESSION_SEQ
INCREMENT BY 1
START WITH 241244602
MAXVALUE 9223372036854775807
NOMINVALUE
NOCYCLE 
CACHE 20
NOORDER 
/
CREATE INDEX VISIT_FLOW_DOMAIN_IDX
ON PATIENT_VISIT
(VISIT_FLOW_ID, VISIT_FLOW_DOMAIN)
PCTFREE 10
INITRANS 2
MAXTRANS 255
TABLESPACE ATS_EMPI
STORAGE(INITIAL 1344M NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
LOGGING
/
CREATE INDEX VISIT_HOSPITAL_IDX
ON PATIENT_VISIT
(HOSPITAL_DOMAIN)
PCTFREE 10
INITRANS 2
MAXTRANS 255
TABLESPACE ATS_EMPI
STORAGE(INITIAL 64K NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
LOGGING
/
CREATE INDEX VISIT_PATIENT_IDX
ON PATIENT_VISIT
(PATIENT_ID)
PCTFREE 10
INITRANS 2
MAXTRANS 255
TABLESPACE ATS_EMPI
STORAGE(INITIAL 64K NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
LOGGING
/
CREATE INDEX VISIT_PERSON_DO_IDX
ON PATIENT_VISIT
(PERSON_DOMAIN)
PCTFREE 10
INITRANS 2
MAXTRANS 255
TABLESPACE ATS_EMPI
STORAGE(INITIAL 64K NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
LOGGING
/
CREATE INDEX VISIT_PERSON_DOMAIN_IDX
ON PATIENT_VISIT
(PERSON_ID, PERSON_DOMAIN)
PCTFREE 10
INITRANS 2
MAXTRANS 255
TABLESPACE ATS_EMPI
STORAGE(INITIAL 2368M NEXT 1M MINEXTENTS 1 MAXEXTENTS 2147483645 BUFFER_POOL DEFAULT)
LOGGING
/
CREATE SEQUENCE VISIT_SEQ
INCREMENT BY 1
START WITH 2713484082
MAXVALUE 9223372036854775807
NOMINVALUE
NOCYCLE 
CACHE 20
NOORDER 
/
