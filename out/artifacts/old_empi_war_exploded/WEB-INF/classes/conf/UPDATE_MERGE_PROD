CREATE OR REPLACE PROCEDURE          MERGE_TYPE_A(LEFT_EMPI IN VARCHAR2,RIGHT_EMPI IN VARCHAR2,OUT_V_MSG OUT VARCHAR2)
IS

GLOBAL_DOMAIN_CODE      VARCHAR2(64);
SQL_GUID                VARCHAR2(64);


BEGIN



  SELECT IDENTIFIER_DOMAIN_ID INTO GLOBAL_DOMAIN_CODE FROM ATS_DICT.IDENTIFIER_DOMAIN_DICT WHERE UNIVERSAL_IDENTIFIER ='2.16.840.1.113883.4.487.2' AND ROWNUM<2;

  SELECT DISTINCT CUSTOM28 INTO SQL_GUID FROM ATS_EMPI.PERSON WHERE EMPI = LEFT_EMPI;

  IF (SQL_GUID = NULL) THEN

  SELECT SYS_GUID() INTO SQL_GUID FROM DUAL;

  END IF;

--MERGE_EVENT--
  insert into ats_empi.merge_event select 
	 ats_empi.merge_event_seq.nextval,
	 sys_guid(),
         person_id,
         custom16,
         custom11,
         given_name,
         gender_cd,
         identity_no,
         date_of_birth,
         RIGHT_EMPI,
         LEFT_empi,
         'MERGE_A',
         '1',
         sysdate,
         '0',
         null,
         null,
         '0',
         null,
         null
    from ats_empi.person
    where EMPI = RIGHT_EMPI;

--PERSON--2013-11-29:PANMIN

  UPDATE ATS_EMPI.PERSON SET EMPI = LEFT_EMPI WHERE EMPI= RIGHT_EMPI AND DATE_VOIDED IS NULL;

--PERSON_IDENTIFIER--2013-11-29:PANMIN

  UPDATE ATS_EMPI.PERSON_IDENTIFIER SET DATE_VOIDED = SYSDATE WHERE CUSTOM1 = RIGHT_EMPI AND IDENTIFIER_DOMAIN_ID = GLOBAL_DOMAIN_CODE AND DATE_VOIDED IS NULL;

  UPDATE ATS_EMPI.PERSON_IDENTIFIER SET CUSTOM2 = NULL,CUSTOM1 = LEFT_EMPI WHERE CUSTOM1 = RIGHT_EMPI AND IDENTIFIER_DOMAIN_ID !=GLOBAL_DOMAIN_CODE;

 --PATIENT_VISIT--2013-11-29

   UPDATE ATS_EMPI.PATIENT_VISIT SET CUSTOM1=LEFT_EMPI WHERE CUSTOM1=RIGHT_EMPI;

 --PATIENT_VISIT_HISTORY-2013-11-29

   UPDATE ATS_EMPI.PATIENT_VISIT_HISTORY SET CUSTOM1=LEFT_EMPI,GLOBAL_ID = LEFT_EMPI WHERE GLOBAL_ID = RIGHT_EMPI;

--EMPI-2013-12-3

   UPDATE ATS_EMPI.EMPI SET DATE_VOIDED = SYSDATE WHERE EMPI = RIGHT_EMPI;

-- 更新所有强制合并ID的CUSTOM28为GUID

   UPDATE ATS_EMPI.PERSON SET CUSTOM28 = SQL_GUID WHERE EMPI = LEFT_EMPI;

   OUT_V_MSG:='1';

EXCEPTION
   
   WHEN OTHERS THEN

      ROLLBACK;

      OUT_V_MSG:='0';

      RAISE_APPLICATION_ERROR(-20010,'MERGE_TYPE_A: 脚本执行错误');

END;
/
CREATE OR REPLACE PROCEDURE          MERGE_TYPE_B(IN_EMPI IN VARCHAR2,IN_PERSONID IN VARCHAR2,IN_IDENTIFIER IN VARCHAR2,IN_DOMAIN IN VARCHAR2,IN_DOMAIN_NAME IN VARCHAR2,OUT_V_MSG OUT VARCHAR2)
IS

BEGIN


--PERSON--2013-11-29:PANMIN

    UPDATE ATS_EMPI.PERSON SET EMPI = IN_EMPI WHERE PERSON_ID = IN_PERSONID AND CUSTOM16 = IN_IDENTIFIER AND CUSTOM11 = IN_DOMAIN AND CUSTOM10 = IN_DOMAIN_NAME AND DATE_VOIDED IS NULL;

--PERSON_IDENTIFIER--2013-11-29:PANMIN

    UPDATE ATS_EMPI.PERSON_IDENTIFIER SET CUSTOM1 = IN_EMPI WHERE DATE_VOIDED IS NULL AND PERSON_ID = IN_PERSONID AND IDENTIFIER = IN_IDENTIFIER AND IDENTIFIER_DOMAIN_ID = (SELECT IDENTIFIER_DOMAIN_ID FROM ATS_DICT.IDENTIFIER_DOMAIN_DICT WHERE UNIVERSAL_IDENTIFIER = IN_DOMAIN AND NAMESPACE_IDENTIFIER = IN_DOMAIN_NAME);

--PATIENT_VISIT--20150723:PANMIN

    UPDATE ATS_EMPI.PATIENT_VISIT SET CUSTOM1 = IN_EMPI WHERE VOIDED_DATE IS NULL AND PATIENT_ID = IN_IDENTIFIER AND PERSON_DOMAIN = IN_DOMAIN;

--PATIENT_VISIT_HISTORY-20150723:PANMIN

    UPDATE ATS_EMPI.PATIENT_VISIT_HISTORY SET GLOBAL_ID = IN_EMPI WHERE VOIDED_DATE IS NULL AND PATIENT_ID = IN_IDENTIFIER AND PERSON_DOMAIN = IN_DOMAIN;

    OUT_V_MSG:='1';

EXCEPTION
   
   WHEN OTHERS THEN

      ROLLBACK;

      OUT_V_MSG:='0';

      RAISE_APPLICATION_ERROR(-20010,'MERGE_TYPE_B: 脚本执行错误');
END;
/
CREATE OR REPLACE PROCEDURE          UPDATE_TYPE_A(IN_EMPI IN VARCHAR2,IN_OLD_EMPI IN VARCHAR2,IN_DOMAIN_ID IN VARCHAR2,IN_DOMAIN_NAME IN VARCHAR2,IN_PERSONID IN VARCHAR2,IN_REPLACEID IN VARCHAR2,OUT_V_MSG OUT VARCHAR2)
IS
SQL_COUNTS     NUMBER;
GLOBAL_DOMAIN_CODE      VARCHAR2(64);
IDENTIFIER_DOMAIN       VARCHAR2(64);
PATIENTID               VARCHAR2(64);

BEGIN

--PERSON_IDENTIFIER--2013-11-29:PANMIN

  SELECT IDENTIFIER_DOMAIN_ID INTO GLOBAL_DOMAIN_CODE FROM ATS_DICT.IDENTIFIER_DOMAIN_DICT WHERE UNIVERSAL_IDENTIFIER ='2.16.840.1.113883.4.487.2' AND ROWNUM<2;

  SELECT IDENTIFIER_DOMAIN_ID INTO IDENTIFIER_DOMAIN FROM ATS_DICT.IDENTIFIER_DOMAIN_DICT WHERE UNIVERSAL_IDENTIFIER = IN_DOMAIN_ID AND NAMESPACE_IDENTIFIER = IN_DOMAIN_NAME;

  SELECT IDENTIFIER INTO PATIENTID FROM ATS_EMPI.PERSON_IDENTIFIER WHERE PERSON_ID = IN_PERSONID AND IDENTIFIER_DOMAIN_ID = IDENTIFIER_DOMAIN AND DATE_VOIDED IS NULL;

  SELECT COUNT(*) INTO SQL_COUNTS FROM ATS_EMPI.PERSON_IDENTIFIER WHERE PERSON_ID = IN_PERSONID AND CUSTOM1 = IN_OLD_EMPI AND DATE_VOIDED IS NULL;

  IF SQL_COUNTS = 2 THEN

    UPDATE ATS_EMPI.PERSON_IDENTIFIER SET CUSTOM2 = CUSTOM1,CUSTOM1 = IN_EMPI WHERE PERSON_ID = IN_PERSONID AND CUSTOM1 = IN_OLD_EMPI AND IDENTIFIER_DOMAIN_ID !=GLOBAL_DOMAIN_CODE AND DATE_VOIDED IS NULL;

    UPDATE ATS_EMPI.PERSON_IDENTIFIER SET PERSON_ID = IN_REPLACEID WHERE PERSON_ID = IN_PERSONID AND IDENTIFIER_DOMAIN_ID = GLOBAL_DOMAIN_CODE AND DATE_VOIDED IS NULL;

    INSERT INTO ATS_EMPI.PERSON_IDENTIFIER VALUES (ATS_EMPI.PERSON_IDENTIFIER_SEQ.nextval,SYSDATE,NULL,IN_EMPI,IN_PERSONID,20120920000001,GLOBAL_DOMAIN_CODE,NULL,IN_EMPI,NULL,NULL,NULL,NULL);

  END IF;

  IF SQL_COUNTS = 1 THEN

       UPDATE ATS_EMPI.PERSON_IDENTIFIER SET CUSTOM2 = CUSTOM1,CUSTOM1 = IN_EMPI WHERE PERSON_ID = IN_PERSONID AND CUSTOM1 = IN_OLD_EMPI AND IDENTIFIER_DOMAIN_ID !=GLOBAL_DOMAIN_CODE AND DATE_VOIDED IS NULL;

       INSERT INTO ATS_EMPI.PERSON_IDENTIFIER VALUES (ATS_EMPI.PERSON_IDENTIFIER_SEQ.nextval,SYSDATE,NULL,IN_EMPI,IN_PERSONID,20120920000001,GLOBAL_DOMAIN_CODE,NULL,IN_EMPI,NULL,NULL,NULL,NULL);

  END IF;

 --PATIENT_VISIT--2013-11-29
   UPDATE ATS_EMPI.PATIENT_VISIT SET CUSTOM1=IN_EMPI  WHERE PATIENT_ID = PATIENTID AND PERSON_DOMAIN = IN_DOMAIN_ID AND VOIDED_DATE IS NULL;

 --PATIENT_VISIT_HISTORY-2013-11-29
   UPDATE ATS_EMPI.PATIENT_VISIT_HISTORY SET CUSTOM1=IN_EMPI,GLOBAL_ID = IN_EMPI WHERE PATIENT_ID = PATIENTID AND PERSON_DOMAIN = IN_DOMAIN_ID AND VOIDED_DATE IS NULL;

--MERGE_EVENT--
  insert into ats_empi.merge_event select 
	 ats_empi.merge_event_seq.nextval,
	 sys_guid(),
         person_id,
         custom16,
         custom11,
         given_name,
         gender_cd,
         identity_no,
         date_of_birth,
         IN_old_empi,
         IN_empi,
         'UPDATE_A',
         '1',
         sysdate,
         '0',
         null,
         null,
         '0',
         null,
         null
    from ats_empi.person
    where person_id = IN_personid;

   OUT_V_MSG:='1';

EXCEPTION
   
   WHEN OTHERS THEN

      ROLLBACK;

      OUT_V_MSG:='0';

      RAISE_APPLICATION_ERROR(-20010,'UPDATE_TYPE_A: 脚本执行错误');

END;
/
CREATE OR REPLACE PROCEDURE          UPDATE_TYPE_B(IN_EMPI IN VARCHAR2,IN_OLD_EMPI IN VARCHAR2,IN_DOMAIN_ID IN VARCHAR2,IN_DOMAIN_NAME IN VARCHAR2,IN_PERSONID IN VARCHAR2,IN_REPLACEID IN VARCHAR2,OUT_V_MSG OUT VARCHAR2)
IS
SQL_COUNTS     NUMBER;
GLOBAL_DOMAIN_CODE      VARCHAR2(64);
IDENTIFIER_DOMAIN       VARCHAR2(64);
PATIENTID               VARCHAR2(64);

BEGIN

--PERSON_IDENTIFIER--2013-11-29:PANMIN

  SELECT IDENTIFIER_DOMAIN_ID INTO GLOBAL_DOMAIN_CODE FROM ATS_DICT.IDENTIFIER_DOMAIN_DICT WHERE UNIVERSAL_IDENTIFIER ='2.16.840.1.113883.4.487.2' AND ROWNUM<2;

  SELECT IDENTIFIER_DOMAIN_ID INTO IDENTIFIER_DOMAIN FROM ATS_DICT.IDENTIFIER_DOMAIN_DICT WHERE UNIVERSAL_IDENTIFIER = IN_DOMAIN_ID AND NAMESPACE_IDENTIFIER = IN_DOMAIN_NAME;

  SELECT IDENTIFIER INTO PATIENTID FROM ATS_EMPI.PERSON_IDENTIFIER WHERE PERSON_ID = IN_PERSONID AND IDENTIFIER_DOMAIN_ID = IDENTIFIER_DOMAIN AND DATE_VOIDED IS NULL;

  UPDATE ATS_EMPI.PERSON_IDENTIFIER SET CUSTOM2 = NULL,CUSTOM1 = IN_EMPI WHERE DATE_VOIDED IS NULL AND PERSON_ID = IN_PERSONID AND CUSTOM1 = IN_OLD_EMPI AND IDENTIFIER_DOMAIN_ID !=GLOBAL_DOMAIN_CODE;

  UPDATE ATS_EMPI.PERSON_IDENTIFIER SET DATE_VOIDED = SYSDATE WHERE PERSON_ID = IN_PERSONID AND CUSTOM1 = IN_OLD_EMPI AND IDENTIFIER_DOMAIN_ID = GLOBAL_DOMAIN_CODE AND DATE_VOIDED IS NULL;


 --PATIENT_VISIT--2013-11-29
   UPDATE ATS_EMPI.PATIENT_VISIT SET CUSTOM1=IN_EMPI WHERE PATIENT_ID = PATIENTID AND PERSON_DOMAIN = IN_DOMAIN_ID AND VOIDED_DATE IS NULL;

 --PATIENT_VISIT_HISTORY-2013-11-29
   UPDATE ATS_EMPI.PATIENT_VISIT_HISTORY SET CUSTOM1= IN_EMPI,GLOBAL_ID = IN_EMPI WHERE PATIENT_ID = PATIENTID AND PERSON_DOMAIN = IN_DOMAIN_ID AND VOIDED_DATE IS NULL;

--MERGE_EVENT--
  insert into ats_empi.merge_event select 
	 ats_empi.merge_event_seq.nextval,
	 sys_guid(),
         person_id,
         custom16,
         custom11,
         given_name,
         gender_cd,
         identity_no,
         date_of_birth,
         IN_old_empi,
         IN_empi,
         'UPDATE_B',
         '1',
         sysdate,
         '0',
         null,
         null,
         '0',
         null,
         null
    from ats_empi.person
    where person_id = IN_personid;

   OUT_V_MSG:='1';

   EXCEPTION

     WHEN OTHERS THEN

       ROLLBACK;

       OUT_V_MSG:='0';

       RAISE_APPLICATION_ERROR(-20010,'UPDATE_TYPE_B: 脚本执行错误');

END;
/
CREATE OR REPLACE PROCEDURE          UPDATE_TYPE_C(IN_NEW_EMPI IN VARCHAR2,IN_OLD_EMPI IN VARCHAR2,IN_DOMAIN_ID IN VARCHAR2,IN_DOMAIN_NAME IN VARCHAR2,IN_PERSONID IN VARCHAR2,IN_REPLACEID IN VARCHAR2,OUT_V_MSG OUT VARCHAR2)
IS
SQL_COUNTS     NUMBER;
GLOBAL_DOMAIN_CODE      VARCHAR2(64);
IDENTIFIER_DOMAIN       VARCHAR2(64);
PATIENTID               VARCHAR2(64);

BEGIN

  SELECT IDENTIFIER_DOMAIN_ID INTO GLOBAL_DOMAIN_CODE FROM ATS_DICT.IDENTIFIER_DOMAIN_DICT WHERE UNIVERSAL_IDENTIFIER ='2.16.840.1.113883.4.487.2' AND ROWNUM<2;

  SELECT IDENTIFIER_DOMAIN_ID INTO IDENTIFIER_DOMAIN FROM ATS_DICT.IDENTIFIER_DOMAIN_DICT WHERE UNIVERSAL_IDENTIFIER = IN_DOMAIN_ID AND NAMESPACE_IDENTIFIER = IN_DOMAIN_NAME;

  SELECT IDENTIFIER INTO PATIENTID FROM ATS_EMPI.PERSON_IDENTIFIER WHERE PERSON_ID = IN_PERSONID AND IDENTIFIER_DOMAIN_ID = IDENTIFIER_DOMAIN AND DATE_VOIDED IS NULL;

--PERSON--2013-11-29:PANMIN

  UPDATE ATS_EMPI.PERSON SET EMPI = IN_NEW_EMPI WHERE EMPI= IN_OLD_EMPI AND DATE_VOIDED IS NULL;

  --DBMS_OUTPUT.PUT_LINE(OLD_EMPI);

--PERSON_IDENTIFIER--2013-11-29:PANMIN

  UPDATE ATS_EMPI.PERSON_IDENTIFIER SET DATE_VOIDED = SYSDATE WHERE CUSTOM1 = IN_OLD_EMPI AND IDENTIFIER_DOMAIN_ID = GLOBAL_DOMAIN_CODE AND DATE_VOIDED IS NULL;

  UPDATE ATS_EMPI.PERSON_IDENTIFIER SET CUSTOM2 = NULL,CUSTOM1 = IN_NEW_EMPI WHERE CUSTOM1 = IN_OLD_EMPI AND IDENTIFIER_DOMAIN_ID !=GLOBAL_DOMAIN_CODE AND DATE_VOIDED IS NULL;

 --PATIENT_VISIT--2013-11-29

   UPDATE ATS_EMPI.PATIENT_VISIT SET CUSTOM1 = IN_NEW_EMPI WHERE CUSTOM1 = IN_OLD_EMPI AND VOIDED_DATE IS NULL;

 --PATIENT_VISIT_HISTORY-2013-11-29

   UPDATE ATS_EMPI.PATIENT_VISIT_HISTORY SET CUSTOM1 = IN_NEW_EMPI,GLOBAL_ID = IN_NEW_EMPI WHERE CUSTOM1 = IN_OLD_EMPI AND VOIDED_DATE IS NULL;

--EMPI-2013-12-3

   UPDATE ATS_EMPI.EMPI SET DATE_VOIDED = SYSDATE WHERE EMPI = IN_OLD_EMPI AND DATE_VOIDED IS NULL;

--MERGE_EVENT--
  insert into ats_empi.merge_event select 
	 ats_empi.merge_event_seq.nextval,
	 sys_guid(),
         person_id,
         custom16,
         custom11,
         given_name,
         gender_cd,
         identity_no,
         date_of_birth,
         IN_old_empi,
         IN_NEW_empi,
         'UPDATE_B',
         '1',
         sysdate,
         '0',
         null,
         null,
         '0',
         null,
         null
    from ats_empi.person
    where person_id = IN_personid;

   OUT_V_MSG:='1';

   EXCEPTION

       WHEN OTHERS THEN

       ROLLBACK;

       OUT_V_MSG:='0';

      RAISE_APPLICATION_ERROR(-20010,'UPDATE_TYPE_C: 脚本执行错误');

END;
/
