<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:aop="http://www.springframework.org/schema/aop" 
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.0.xsd       
       http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-2.0.xsd
	   http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-2.0.xsd"
	   default-lazy-init="true">
	   
    <!--<bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">-->
        <!--<property name="locations">-->
            <!--<list>-->
                <!--<value>classpath:apixpdq.properties</value>-->
            <!--</list>-->
        <!--</property>-->
    <!--</bean>-->


	<!-- 引入属性文件 -->
	<bean class="com.ats.aempi.util.ConvertPwdPropertyConfigurer">
		<property name="systemPropertiesModeName" value="SYSTEM_PROPERTIES_MODE_OVERRIDE" />
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
			<list>
				<value>classpath:apixpdq.properties</value>
			</list>
		</property>
		<property name="decryptProperties">
			<list>
				<!-- 需要解密的配置 -->
				<value>jdbc.password</value>
			</list>
		</property>
	</bean>


	<bean id="ds" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
	    <property name="driverClassName" value="${jdbc.driverClassName}"/>
		<property name="url" value="${jdbc.url}"/>
		<property name="username" value="${jdbc.username}"/>
		<property name="password" value="${jdbc.password}"/>
	</bean>

	<bean id="sf" class="org.springframework.orm.hibernate3.LocalSessionFactoryBean">
		<property name="hibernateProperties">
			<props>
				<prop key="hibernate.current_session_context_class">org.springframework.orm.hibernate3.SpringSessionContext</prop>
				<prop key="hibernate.dialect">${jdbc.hibernate.dialect}</prop>
				<prop key="hibernate.show_sql">false</prop>
				<prop key="hibernate.format_sql">false</prop>				
			</props>			
		</property>
		<property name="mappingResources">
			<list>
				<value>com/ats/apixpdq/web/beans/MaritalStatusDict.hbm.xml</value>
				<value>com/ats/apixpdq/web/beans/NationalityDict.hbm.xml</value>
				<value>com/ats/apixpdq/web/beans/RelationshipTypeDict.hbm.xml</value>
			</list>
		</property>

		<property name="dataSource" ref="ds"/>
	</bean>

	<bean id="transActionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory" ref="sf"></property>
	</bean>
	
	<tx:advice id="txAdvice" transaction-manager="transActionManager">
		<tx:attributes>
			<tx:method name="*" propagation="REQUIRED"/>
		</tx:attributes>
	</tx:advice>
	
	<aop:config>
		<aop:pointcut expression="execution(* com.ats.apixpdq.web.service.DictionaryService.*(..))" id="pc"/>
		<aop:advisor advice-ref="txAdvice" pointcut-ref="pc"/>
	</aop:config>
	
	
	<bean id="basedao" class="com.ats.apixpdq.web.dao.HibernateUtil">
		<property name="sf" ref="sf"></property>
	</bean>
	
	<bean id="dictionaryDao" class="com.ats.apixpdq.web.dao.DictionaryDaoImpl" parent="basedao"/>
	<bean id="contactpersonDao" class="com.ats.apixpdq.web.dao.ContactpersonDaoImpl" parent="basedao"/>
	
	<bean id="dictionaryService" class="com.ats.apixpdq.web.service.DictionaryService">
		<property name="dictionaryDao" ref="dictionaryDao"></property>
	</bean>
			
	<bean id="contactpersonService" class="com.ats.apixpdq.web.service.ContactpersonServiceImpl">
		<property name="contactpersonDao" ref="contactpersonDao"></property>
	</bean> 
	
	<bean id="pixManagerAction" class="com.ats.apixpdq.web.action.PixManagerAction" >
		<property name="dictionaryService" ref="dictionaryService"></property>
		<property name="contactpersonService" ref="contactpersonService"></property>
	</bean>

    <bean id="pixManagerAdapter" class="com.ats.aempi.apixpdqadapter.PixManagerAdapter" />  
    
    <bean id="pdSupplierAdapter" class="com.ats.aempi.apixpdqadapter.PdqSupplierAdapter" />  

	<bean id="pixEvent"	class="com.misys.hieportal.sysmon.JMXEventNotifier" />

    <!--  
	<bean id="exporter"	class="org.springframework.jmx.export.MBeanExporter" lazy-init="false">
		<property name="beans">
			<map>
				<entry key="bean:name=PIXMgrEvents" value-ref="pixEvent" />
			</map>
		</property>
	</bean>
	-->
	
	<bean id="rmiRegistry" class="org.springframework.remoting.rmi.RmiRegistryFactoryBean" />
	
	<bean id="connectorServer" class="org.springframework.jmx.support.ConnectorServerFactoryBean" depends-on="rmiRegistry">
	
	<property name="serviceUrl"	value="service:jmx:rmi:///jndi/rmi://localhost:1099/jmxrmi" />
	
	</bean>

</beans>    
